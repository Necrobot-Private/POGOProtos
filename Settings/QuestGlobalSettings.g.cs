// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Settings/QuestGlobalSettings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Settings {

  /// <summary>Holder for reflection information generated from POGOProtos/Settings/QuestGlobalSettings.proto</summary>
  public static partial class QuestGlobalSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Settings/QuestGlobalSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QuestGlobalSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1QT0dPUHJvdG9zL1NldHRpbmdzL1F1ZXN0R2xvYmFsU2V0dGluZ3MucHJv",
            "dG8SE1BPR09Qcm90b3MuU2V0dGluZ3MiSgoTUXVlc3RHbG9iYWxTZXR0aW5n",
            "cxIVCg1lbmFibGVfcXVlc3RzGAEgASgIEhwKFG1heF9jaGFsbGVuZ2VfcXVl",
            "c3RzGAIgASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.QuestGlobalSettings), global::POGOProtos.Settings.QuestGlobalSettings.Parser, new[]{ "EnableQuests", "MaxChallengeQuests" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class QuestGlobalSettings : pb::IMessage<QuestGlobalSettings> {
    private static readonly pb::MessageParser<QuestGlobalSettings> _parser = new pb::MessageParser<QuestGlobalSettings>(() => new QuestGlobalSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestGlobalSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.QuestGlobalSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestGlobalSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestGlobalSettings(QuestGlobalSettings other) : this() {
      enableQuests_ = other.enableQuests_;
      maxChallengeQuests_ = other.maxChallengeQuests_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestGlobalSettings Clone() {
      return new QuestGlobalSettings(this);
    }

    /// <summary>Field number for the "enable_quests" field.</summary>
    public const int EnableQuestsFieldNumber = 1;
    private bool enableQuests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableQuests {
      get { return enableQuests_; }
      set {
        enableQuests_ = value;
      }
    }

    /// <summary>Field number for the "max_challenge_quests" field.</summary>
    public const int MaxChallengeQuestsFieldNumber = 2;
    private int maxChallengeQuests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxChallengeQuests {
      get { return maxChallengeQuests_; }
      set {
        maxChallengeQuests_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestGlobalSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestGlobalSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableQuests != other.EnableQuests) return false;
      if (MaxChallengeQuests != other.MaxChallengeQuests) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnableQuests != false) hash ^= EnableQuests.GetHashCode();
      if (MaxChallengeQuests != 0) hash ^= MaxChallengeQuests.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnableQuests != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableQuests);
      }
      if (MaxChallengeQuests != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxChallengeQuests);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnableQuests != false) {
        size += 1 + 1;
      }
      if (MaxChallengeQuests != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxChallengeQuests);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestGlobalSettings other) {
      if (other == null) {
        return;
      }
      if (other.EnableQuests != false) {
        EnableQuests = other.EnableQuests;
      }
      if (other.MaxChallengeQuests != 0) {
        MaxChallengeQuests = other.MaxChallengeQuests;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableQuests = input.ReadBool();
            break;
          }
          case 16: {
            MaxChallengeQuests = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
