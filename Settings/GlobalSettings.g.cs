// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/GlobalSettings.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Settings {

  /// <summary>Holder for reflection information generated from POGOProtos/Settings/GlobalSettings.proto</summary>
  public static partial class GlobalSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Settings/GlobalSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GlobalSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihQT0dPUHJvdG9zL1NldHRpbmdzL0dsb2JhbFNldHRpbmdzLnByb3RvEhNQ",
            "T0dPUHJvdG9zLlNldHRpbmdzGidQT0dPUHJvdG9zL1NldHRpbmdzL0V2ZW50",
            "U2V0dGluZ3MucHJvdG8aKlBPR09Qcm90b3MvU2V0dGluZ3MvRmVzdGl2YWxT",
            "ZXR0aW5ncy5wcm90bxomUE9HT1Byb3Rvcy9TZXR0aW5ncy9Gb3J0U2V0dGlu",
            "Z3MucHJvdG8aJVBPR09Qcm90b3MvU2V0dGluZ3MvR3BzU2V0dGluZ3MucHJv",
            "dG8aK1BPR09Qcm90b3MvU2V0dGluZ3MvSW52ZW50b3J5U2V0dGluZ3MucHJv",
            "dG8aJ1BPR09Qcm90b3MvU2V0dGluZ3MvTGV2ZWxTZXR0aW5ncy5wcm90bxol",
            "UE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXBTZXR0aW5ncy5wcm90bxomUE9HT1By",
            "b3Rvcy9TZXR0aW5ncy9OZXdzU2V0dGluZ3MucHJvdG8aLlBPR09Qcm90b3Mv",
            "U2V0dGluZ3MvTm90aWZpY2F0aW9uU2V0dGluZ3MucHJvdG8aKlBPR09Qcm90",
            "b3MvU2V0dGluZ3MvUGFzc2NvZGVTZXR0aW5ncy5wcm90bxonUE9HT1Byb3Rv",
            "cy9TZXR0aW5ncy9TZmlkYVNldHRpbmdzLnByb3RvGi1QT0dPUHJvdG9zL1Nl",
            "dHRpbmdzL1RyYW5zbGF0aW9uU2V0dGluZ3MucHJvdG8aM1BPR09Qcm90b3Mv",
            "U2V0dGluZ3MvQ2xpZW50UGVyZm9ybWFuY2VTZXR0aW5ncy5wcm90byKpBwoO",
            "R2xvYmFsU2V0dGluZ3MSOAoNZm9ydF9zZXR0aW5ncxgCIAEoCzIhLlBPR09Q",
            "cm90b3MuU2V0dGluZ3MuRm9ydFNldHRpbmdzEjYKDG1hcF9zZXR0aW5ncxgD",
            "IAEoCzIgLlBPR09Qcm90b3MuU2V0dGluZ3MuTWFwU2V0dGluZ3MSOgoObGV2",
            "ZWxfc2V0dGluZ3MYBCABKAsyIi5QT0dPUHJvdG9zLlNldHRpbmdzLkxldmVs",
            "U2V0dGluZ3MSQgoSaW52ZW50b3J5X3NldHRpbmdzGAUgASgLMiYuUE9HT1By",
            "b3Rvcy5TZXR0aW5ncy5JbnZlbnRvcnlTZXR0aW5ncxIeChZtaW5pbXVtX2Ns",
            "aWVudF92ZXJzaW9uGAYgASgJEjYKDGdwc19zZXR0aW5ncxgHIAEoCzIgLlBP",
            "R09Qcm90b3MuU2V0dGluZ3MuR3BzU2V0dGluZ3MSQAoRZmVzdGl2YWxfc2V0",
            "dGluZ3MYCCABKAsyJS5QT0dPUHJvdG9zLlNldHRpbmdzLkZlc3RpdmFsU2V0",
            "dGluZ3MSOgoOZXZlbnRfc2V0dGluZ3MYCSABKAsyIi5QT0dPUHJvdG9zLlNl",
            "dHRpbmdzLkV2ZW50U2V0dGluZ3MSGQoRbWF4X3Bva2Vtb25fdHlwZXMYCiAB",
            "KAUSOgoOc2ZpZGFfc2V0dGluZ3MYCyABKAsyIi5QT0dPUHJvdG9zLlNldHRp",
            "bmdzLlNmaWRhU2V0dGluZ3MSOAoNbmV3c19zZXR0aW5ncxgMIAEoCzIhLlBP",
            "R09Qcm90b3MuU2V0dGluZ3MuTmV3c1NldHRpbmdzEkYKFHRyYW5zbGF0aW9u",
            "X3NldHRpbmdzGA0gASgLMiguUE9HT1Byb3Rvcy5TZXR0aW5ncy5UcmFuc2xh",
            "dGlvblNldHRpbmdzEkAKEXBhc3Njb2RlX3NldHRpbmdzGA4gASgLMiUuUE9H",
            "T1Byb3Rvcy5TZXR0aW5ncy5QYXNzY29kZVNldHRpbmdzEkgKFW5vdGlmaWNh",
            "dGlvbl9zZXR0aW5ncxgPIAEoCzIpLlBPR09Qcm90b3MuU2V0dGluZ3MuTm90",
            "aWZpY2F0aW9uU2V0dGluZ3MSHAoUY2xpZW50X2FwcF9ibGFja2xpc3QYECAD",
            "KAkSTAoUY2xpZW50X3BlcmZfc2V0dGluZ3MYESABKAsyLi5QT0dPUHJvdG9z",
            "LlNldHRpbmdzLkNsaWVudFBlcmZvcm1hbmNlU2V0dGluZ3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Settings.EventSettingsReflection.Descriptor, global::POGOProtos.Settings.FestivalSettingsReflection.Descriptor, global::POGOProtos.Settings.FortSettingsReflection.Descriptor, global::POGOProtos.Settings.GpsSettingsReflection.Descriptor, global::POGOProtos.Settings.InventorySettingsReflection.Descriptor, global::POGOProtos.Settings.LevelSettingsReflection.Descriptor, global::POGOProtos.Settings.MapSettingsReflection.Descriptor, global::POGOProtos.Settings.NewsSettingsReflection.Descriptor, global::POGOProtos.Settings.NotificationSettingsReflection.Descriptor, global::POGOProtos.Settings.PasscodeSettingsReflection.Descriptor, global::POGOProtos.Settings.SfidaSettingsReflection.Descriptor, global::POGOProtos.Settings.TranslationSettingsReflection.Descriptor, global::POGOProtos.Settings.ClientPerformanceSettingsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.GlobalSettings), global::POGOProtos.Settings.GlobalSettings.Parser, new[]{ "FortSettings", "MapSettings", "LevelSettings", "InventorySettings", "MinimumClientVersion", "GpsSettings", "FestivalSettings", "EventSettings", "MaxPokemonTypes", "SfidaSettings", "NewsSettings", "TranslationSettings", "PasscodeSettings", "NotificationSettings", "ClientAppBlacklist", "ClientPerfSettings" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GlobalSettings : pb::IMessage<GlobalSettings> {
    private static readonly pb::MessageParser<GlobalSettings> _parser = new pb::MessageParser<GlobalSettings>(() => new GlobalSettings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GlobalSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.GlobalSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSettings(GlobalSettings other) : this() {
      FortSettings = other.fortSettings_ != null ? other.FortSettings.Clone() : null;
      MapSettings = other.mapSettings_ != null ? other.MapSettings.Clone() : null;
      LevelSettings = other.levelSettings_ != null ? other.LevelSettings.Clone() : null;
      InventorySettings = other.inventorySettings_ != null ? other.InventorySettings.Clone() : null;
      minimumClientVersion_ = other.minimumClientVersion_;
      GpsSettings = other.gpsSettings_ != null ? other.GpsSettings.Clone() : null;
      FestivalSettings = other.festivalSettings_ != null ? other.FestivalSettings.Clone() : null;
      EventSettings = other.eventSettings_ != null ? other.EventSettings.Clone() : null;
      maxPokemonTypes_ = other.maxPokemonTypes_;
      SfidaSettings = other.sfidaSettings_ != null ? other.SfidaSettings.Clone() : null;
      NewsSettings = other.newsSettings_ != null ? other.NewsSettings.Clone() : null;
      TranslationSettings = other.translationSettings_ != null ? other.TranslationSettings.Clone() : null;
      PasscodeSettings = other.passcodeSettings_ != null ? other.PasscodeSettings.Clone() : null;
      NotificationSettings = other.notificationSettings_ != null ? other.NotificationSettings.Clone() : null;
      clientAppBlacklist_ = other.clientAppBlacklist_.Clone();
      ClientPerfSettings = other.clientPerfSettings_ != null ? other.ClientPerfSettings.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSettings Clone() {
      return new GlobalSettings(this);
    }

    /// <summary>Field number for the "fort_settings" field.</summary>
    public const int FortSettingsFieldNumber = 2;
    private global::POGOProtos.Settings.FortSettings fortSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.FortSettings FortSettings {
      get { return fortSettings_; }
      set {
        fortSettings_ = value;
      }
    }

    /// <summary>Field number for the "map_settings" field.</summary>
    public const int MapSettingsFieldNumber = 3;
    private global::POGOProtos.Settings.MapSettings mapSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.MapSettings MapSettings {
      get { return mapSettings_; }
      set {
        mapSettings_ = value;
      }
    }

    /// <summary>Field number for the "level_settings" field.</summary>
    public const int LevelSettingsFieldNumber = 4;
    private global::POGOProtos.Settings.LevelSettings levelSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.LevelSettings LevelSettings {
      get { return levelSettings_; }
      set {
        levelSettings_ = value;
      }
    }

    /// <summary>Field number for the "inventory_settings" field.</summary>
    public const int InventorySettingsFieldNumber = 5;
    private global::POGOProtos.Settings.InventorySettings inventorySettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.InventorySettings InventorySettings {
      get { return inventorySettings_; }
      set {
        inventorySettings_ = value;
      }
    }

    /// <summary>Field number for the "minimum_client_version" field.</summary>
    public const int MinimumClientVersionFieldNumber = 6;
    private string minimumClientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MinimumClientVersion {
      get { return minimumClientVersion_; }
      set {
        minimumClientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_settings" field.</summary>
    public const int GpsSettingsFieldNumber = 7;
    private global::POGOProtos.Settings.GpsSettings gpsSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.GpsSettings GpsSettings {
      get { return gpsSettings_; }
      set {
        gpsSettings_ = value;
      }
    }

    /// <summary>Field number for the "festival_settings" field.</summary>
    public const int FestivalSettingsFieldNumber = 8;
    private global::POGOProtos.Settings.FestivalSettings festivalSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.FestivalSettings FestivalSettings {
      get { return festivalSettings_; }
      set {
        festivalSettings_ = value;
      }
    }

    /// <summary>Field number for the "event_settings" field.</summary>
    public const int EventSettingsFieldNumber = 9;
    private global::POGOProtos.Settings.EventSettings eventSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.EventSettings EventSettings {
      get { return eventSettings_; }
      set {
        eventSettings_ = value;
      }
    }

    /// <summary>Field number for the "max_pokemon_types" field.</summary>
    public const int MaxPokemonTypesFieldNumber = 10;
    private int maxPokemonTypes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPokemonTypes {
      get { return maxPokemonTypes_; }
      set {
        maxPokemonTypes_ = value;
      }
    }

    /// <summary>Field number for the "sfida_settings" field.</summary>
    public const int SfidaSettingsFieldNumber = 11;
    private global::POGOProtos.Settings.SfidaSettings sfidaSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.SfidaSettings SfidaSettings {
      get { return sfidaSettings_; }
      set {
        sfidaSettings_ = value;
      }
    }

    /// <summary>Field number for the "news_settings" field.</summary>
    public const int NewsSettingsFieldNumber = 12;
    private global::POGOProtos.Settings.NewsSettings newsSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.NewsSettings NewsSettings {
      get { return newsSettings_; }
      set {
        newsSettings_ = value;
      }
    }

    /// <summary>Field number for the "translation_settings" field.</summary>
    public const int TranslationSettingsFieldNumber = 13;
    private global::POGOProtos.Settings.TranslationSettings translationSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.TranslationSettings TranslationSettings {
      get { return translationSettings_; }
      set {
        translationSettings_ = value;
      }
    }

    /// <summary>Field number for the "passcode_settings" field.</summary>
    public const int PasscodeSettingsFieldNumber = 14;
    private global::POGOProtos.Settings.PasscodeSettings passcodeSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.PasscodeSettings PasscodeSettings {
      get { return passcodeSettings_; }
      set {
        passcodeSettings_ = value;
      }
    }

    /// <summary>Field number for the "notification_settings" field.</summary>
    public const int NotificationSettingsFieldNumber = 15;
    private global::POGOProtos.Settings.NotificationSettings notificationSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.NotificationSettings NotificationSettings {
      get { return notificationSettings_; }
      set {
        notificationSettings_ = value;
      }
    }

    /// <summary>Field number for the "client_app_blacklist" field.</summary>
    public const int ClientAppBlacklistFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _repeated_clientAppBlacklist_codec
        = pb::FieldCodec.ForString(130);
    private readonly pbc::RepeatedField<string> clientAppBlacklist_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ClientAppBlacklist {
      get { return clientAppBlacklist_; }
    }

    /// <summary>Field number for the "client_perf_settings" field.</summary>
    public const int ClientPerfSettingsFieldNumber = 17;
    private global::POGOProtos.Settings.ClientPerformanceSettings clientPerfSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.ClientPerformanceSettings ClientPerfSettings {
      get { return clientPerfSettings_; }
      set {
        clientPerfSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GlobalSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GlobalSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FortSettings, other.FortSettings)) return false;
      if (!object.Equals(MapSettings, other.MapSettings)) return false;
      if (!object.Equals(LevelSettings, other.LevelSettings)) return false;
      if (!object.Equals(InventorySettings, other.InventorySettings)) return false;
      if (MinimumClientVersion != other.MinimumClientVersion) return false;
      if (!object.Equals(GpsSettings, other.GpsSettings)) return false;
      if (!object.Equals(FestivalSettings, other.FestivalSettings)) return false;
      if (!object.Equals(EventSettings, other.EventSettings)) return false;
      if (MaxPokemonTypes != other.MaxPokemonTypes) return false;
      if (!object.Equals(SfidaSettings, other.SfidaSettings)) return false;
      if (!object.Equals(NewsSettings, other.NewsSettings)) return false;
      if (!object.Equals(TranslationSettings, other.TranslationSettings)) return false;
      if (!object.Equals(PasscodeSettings, other.PasscodeSettings)) return false;
      if (!object.Equals(NotificationSettings, other.NotificationSettings)) return false;
      if(!clientAppBlacklist_.Equals(other.clientAppBlacklist_)) return false;
      if (!object.Equals(ClientPerfSettings, other.ClientPerfSettings)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fortSettings_ != null) hash ^= FortSettings.GetHashCode();
      if (mapSettings_ != null) hash ^= MapSettings.GetHashCode();
      if (levelSettings_ != null) hash ^= LevelSettings.GetHashCode();
      if (inventorySettings_ != null) hash ^= InventorySettings.GetHashCode();
      if (MinimumClientVersion.Length != 0) hash ^= MinimumClientVersion.GetHashCode();
      if (gpsSettings_ != null) hash ^= GpsSettings.GetHashCode();
      if (festivalSettings_ != null) hash ^= FestivalSettings.GetHashCode();
      if (eventSettings_ != null) hash ^= EventSettings.GetHashCode();
      if (MaxPokemonTypes != 0) hash ^= MaxPokemonTypes.GetHashCode();
      if (sfidaSettings_ != null) hash ^= SfidaSettings.GetHashCode();
      if (newsSettings_ != null) hash ^= NewsSettings.GetHashCode();
      if (translationSettings_ != null) hash ^= TranslationSettings.GetHashCode();
      if (passcodeSettings_ != null) hash ^= PasscodeSettings.GetHashCode();
      if (notificationSettings_ != null) hash ^= NotificationSettings.GetHashCode();
      hash ^= clientAppBlacklist_.GetHashCode();
      if (clientPerfSettings_ != null) hash ^= ClientPerfSettings.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fortSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FortSettings);
      }
      if (mapSettings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MapSettings);
      }
      if (levelSettings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LevelSettings);
      }
      if (inventorySettings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(InventorySettings);
      }
      if (MinimumClientVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MinimumClientVersion);
      }
      if (gpsSettings_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GpsSettings);
      }
      if (festivalSettings_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FestivalSettings);
      }
      if (eventSettings_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EventSettings);
      }
      if (MaxPokemonTypes != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MaxPokemonTypes);
      }
      if (sfidaSettings_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(SfidaSettings);
      }
      if (newsSettings_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(NewsSettings);
      }
      if (translationSettings_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TranslationSettings);
      }
      if (passcodeSettings_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(PasscodeSettings);
      }
      if (notificationSettings_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(NotificationSettings);
      }
      clientAppBlacklist_.WriteTo(output, _repeated_clientAppBlacklist_codec);
      if (clientPerfSettings_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ClientPerfSettings);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fortSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FortSettings);
      }
      if (mapSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapSettings);
      }
      if (levelSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelSettings);
      }
      if (inventorySettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InventorySettings);
      }
      if (MinimumClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinimumClientVersion);
      }
      if (gpsSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsSettings);
      }
      if (festivalSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FestivalSettings);
      }
      if (eventSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventSettings);
      }
      if (MaxPokemonTypes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPokemonTypes);
      }
      if (sfidaSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SfidaSettings);
      }
      if (newsSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewsSettings);
      }
      if (translationSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TranslationSettings);
      }
      if (passcodeSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PasscodeSettings);
      }
      if (notificationSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationSettings);
      }
      size += clientAppBlacklist_.CalculateSize(_repeated_clientAppBlacklist_codec);
      if (clientPerfSettings_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClientPerfSettings);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GlobalSettings other) {
      if (other == null) {
        return;
      }
      if (other.fortSettings_ != null) {
        if (fortSettings_ == null) {
          fortSettings_ = new global::POGOProtos.Settings.FortSettings();
        }
        FortSettings.MergeFrom(other.FortSettings);
      }
      if (other.mapSettings_ != null) {
        if (mapSettings_ == null) {
          mapSettings_ = new global::POGOProtos.Settings.MapSettings();
        }
        MapSettings.MergeFrom(other.MapSettings);
      }
      if (other.levelSettings_ != null) {
        if (levelSettings_ == null) {
          levelSettings_ = new global::POGOProtos.Settings.LevelSettings();
        }
        LevelSettings.MergeFrom(other.LevelSettings);
      }
      if (other.inventorySettings_ != null) {
        if (inventorySettings_ == null) {
          inventorySettings_ = new global::POGOProtos.Settings.InventorySettings();
        }
        InventorySettings.MergeFrom(other.InventorySettings);
      }
      if (other.MinimumClientVersion.Length != 0) {
        MinimumClientVersion = other.MinimumClientVersion;
      }
      if (other.gpsSettings_ != null) {
        if (gpsSettings_ == null) {
          gpsSettings_ = new global::POGOProtos.Settings.GpsSettings();
        }
        GpsSettings.MergeFrom(other.GpsSettings);
      }
      if (other.festivalSettings_ != null) {
        if (festivalSettings_ == null) {
          festivalSettings_ = new global::POGOProtos.Settings.FestivalSettings();
        }
        FestivalSettings.MergeFrom(other.FestivalSettings);
      }
      if (other.eventSettings_ != null) {
        if (eventSettings_ == null) {
          eventSettings_ = new global::POGOProtos.Settings.EventSettings();
        }
        EventSettings.MergeFrom(other.EventSettings);
      }
      if (other.MaxPokemonTypes != 0) {
        MaxPokemonTypes = other.MaxPokemonTypes;
      }
      if (other.sfidaSettings_ != null) {
        if (sfidaSettings_ == null) {
          sfidaSettings_ = new global::POGOProtos.Settings.SfidaSettings();
        }
        SfidaSettings.MergeFrom(other.SfidaSettings);
      }
      if (other.newsSettings_ != null) {
        if (newsSettings_ == null) {
          newsSettings_ = new global::POGOProtos.Settings.NewsSettings();
        }
        NewsSettings.MergeFrom(other.NewsSettings);
      }
      if (other.translationSettings_ != null) {
        if (translationSettings_ == null) {
          translationSettings_ = new global::POGOProtos.Settings.TranslationSettings();
        }
        TranslationSettings.MergeFrom(other.TranslationSettings);
      }
      if (other.passcodeSettings_ != null) {
        if (passcodeSettings_ == null) {
          passcodeSettings_ = new global::POGOProtos.Settings.PasscodeSettings();
        }
        PasscodeSettings.MergeFrom(other.PasscodeSettings);
      }
      if (other.notificationSettings_ != null) {
        if (notificationSettings_ == null) {
          notificationSettings_ = new global::POGOProtos.Settings.NotificationSettings();
        }
        NotificationSettings.MergeFrom(other.NotificationSettings);
      }
      clientAppBlacklist_.Add(other.clientAppBlacklist_);
      if (other.clientPerfSettings_ != null) {
        if (clientPerfSettings_ == null) {
          clientPerfSettings_ = new global::POGOProtos.Settings.ClientPerformanceSettings();
        }
        ClientPerfSettings.MergeFrom(other.ClientPerfSettings);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (fortSettings_ == null) {
              fortSettings_ = new global::POGOProtos.Settings.FortSettings();
            }
            input.ReadMessage(fortSettings_);
            break;
          }
          case 26: {
            if (mapSettings_ == null) {
              mapSettings_ = new global::POGOProtos.Settings.MapSettings();
            }
            input.ReadMessage(mapSettings_);
            break;
          }
          case 34: {
            if (levelSettings_ == null) {
              levelSettings_ = new global::POGOProtos.Settings.LevelSettings();
            }
            input.ReadMessage(levelSettings_);
            break;
          }
          case 42: {
            if (inventorySettings_ == null) {
              inventorySettings_ = new global::POGOProtos.Settings.InventorySettings();
            }
            input.ReadMessage(inventorySettings_);
            break;
          }
          case 50: {
            MinimumClientVersion = input.ReadString();
            break;
          }
          case 58: {
            if (gpsSettings_ == null) {
              gpsSettings_ = new global::POGOProtos.Settings.GpsSettings();
            }
            input.ReadMessage(gpsSettings_);
            break;
          }
          case 66: {
            if (festivalSettings_ == null) {
              festivalSettings_ = new global::POGOProtos.Settings.FestivalSettings();
            }
            input.ReadMessage(festivalSettings_);
            break;
          }
          case 74: {
            if (eventSettings_ == null) {
              eventSettings_ = new global::POGOProtos.Settings.EventSettings();
            }
            input.ReadMessage(eventSettings_);
            break;
          }
          case 80: {
            MaxPokemonTypes = input.ReadInt32();
            break;
          }
          case 90: {
            if (sfidaSettings_ == null) {
              sfidaSettings_ = new global::POGOProtos.Settings.SfidaSettings();
            }
            input.ReadMessage(sfidaSettings_);
            break;
          }
          case 98: {
            if (newsSettings_ == null) {
              newsSettings_ = new global::POGOProtos.Settings.NewsSettings();
            }
            input.ReadMessage(newsSettings_);
            break;
          }
          case 106: {
            if (translationSettings_ == null) {
              translationSettings_ = new global::POGOProtos.Settings.TranslationSettings();
            }
            input.ReadMessage(translationSettings_);
            break;
          }
          case 114: {
            if (passcodeSettings_ == null) {
              passcodeSettings_ = new global::POGOProtos.Settings.PasscodeSettings();
            }
            input.ReadMessage(passcodeSettings_);
            break;
          }
          case 122: {
            if (notificationSettings_ == null) {
              notificationSettings_ = new global::POGOProtos.Settings.NotificationSettings();
            }
            input.ReadMessage(notificationSettings_);
            break;
          }
          case 130: {
            clientAppBlacklist_.AddEntriesFrom(input, _repeated_clientAppBlacklist_codec);
            break;
          }
          case 138: {
            if (clientPerfSettings_ == null) {
              clientPerfSettings_ = new global::POGOProtos.Settings.ClientPerformanceSettings();
            }
            input.ReadMessage(clientPerfSettings_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
