// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Settings/Master/FriendshipLevelMilestoneSettings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Settings.Master {

  /// <summary>Holder for reflection information generated from POGOProtos/Settings/Master/FriendshipLevelMilestoneSettings.proto</summary>
  public static partial class FriendshipLevelMilestoneSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Settings/Master/FriendshipLevelMilestoneSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FriendshipLevelMilestoneSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkFQT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rlci9GcmllbmRzaGlwTGV2ZWxN",
            "aWxlc3RvbmVTZXR0aW5ncy5wcm90bxIaUE9HT1Byb3Rvcy5TZXR0aW5ncy5N",
            "YXN0ZXIaKVBPR09Qcm90b3MvRW51bXMvUG9rZW1vblRyYWRpbmdUeXBlLnBy",
            "b3RvIvABCiBGcmllbmRzaGlwTGV2ZWxNaWxlc3RvbmVTZXR0aW5ncxIbChNt",
            "aW5fcG9pbnRzX3RvX3JlYWNoGAEgASgFEhsKE21pbGVzdG9uZV94cF9yZXdh",
            "cmQYAiABKAUSHwoXYXR0YWNrX2JvbnVzX3BlcmNlbnRhZ2UYAyABKAISFwoP",
            "cmFpZF9iYWxsX2JvbnVzGAQgASgFEj4KEHVubG9ja2VkX3RyYWRpbmcYBSAD",
            "KA4yJC5QT0dPUHJvdG9zLkVudW1zLlBva2Vtb25UcmFkaW5nVHlwZRIYChB0",
            "cmFkaW5nX2Rpc2NvdW50GAYgASgCYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Enums.PokemonTradingTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.Master.FriendshipLevelMilestoneSettings), global::POGOProtos.Settings.Master.FriendshipLevelMilestoneSettings.Parser, new[]{ "MinPointsToReach", "MilestoneXpReward", "AttackBonusPercentage", "RaidBallBonus", "UnlockedTrading", "TradingDiscount" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FriendshipLevelMilestoneSettings : pb::IMessage<FriendshipLevelMilestoneSettings> {
    private static readonly pb::MessageParser<FriendshipLevelMilestoneSettings> _parser = new pb::MessageParser<FriendshipLevelMilestoneSettings>(() => new FriendshipLevelMilestoneSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendshipLevelMilestoneSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.Master.FriendshipLevelMilestoneSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendshipLevelMilestoneSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendshipLevelMilestoneSettings(FriendshipLevelMilestoneSettings other) : this() {
      minPointsToReach_ = other.minPointsToReach_;
      milestoneXpReward_ = other.milestoneXpReward_;
      attackBonusPercentage_ = other.attackBonusPercentage_;
      raidBallBonus_ = other.raidBallBonus_;
      unlockedTrading_ = other.unlockedTrading_.Clone();
      tradingDiscount_ = other.tradingDiscount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendshipLevelMilestoneSettings Clone() {
      return new FriendshipLevelMilestoneSettings(this);
    }

    /// <summary>Field number for the "min_points_to_reach" field.</summary>
    public const int MinPointsToReachFieldNumber = 1;
    private int minPointsToReach_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinPointsToReach {
      get { return minPointsToReach_; }
      set {
        minPointsToReach_ = value;
      }
    }

    /// <summary>Field number for the "milestone_xp_reward" field.</summary>
    public const int MilestoneXpRewardFieldNumber = 2;
    private int milestoneXpReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MilestoneXpReward {
      get { return milestoneXpReward_; }
      set {
        milestoneXpReward_ = value;
      }
    }

    /// <summary>Field number for the "attack_bonus_percentage" field.</summary>
    public const int AttackBonusPercentageFieldNumber = 3;
    private float attackBonusPercentage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AttackBonusPercentage {
      get { return attackBonusPercentage_; }
      set {
        attackBonusPercentage_ = value;
      }
    }

    /// <summary>Field number for the "raid_ball_bonus" field.</summary>
    public const int RaidBallBonusFieldNumber = 4;
    private int raidBallBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RaidBallBonus {
      get { return raidBallBonus_; }
      set {
        raidBallBonus_ = value;
      }
    }

    /// <summary>Field number for the "unlocked_trading" field.</summary>
    public const int UnlockedTradingFieldNumber = 5;
    private static readonly pb::FieldCodec<global::POGOProtos.Enums.PokemonTradingType> _repeated_unlockedTrading_codec
        = pb::FieldCodec.ForEnum(42, x => (int) x, x => (global::POGOProtos.Enums.PokemonTradingType) x);
    private readonly pbc::RepeatedField<global::POGOProtos.Enums.PokemonTradingType> unlockedTrading_ = new pbc::RepeatedField<global::POGOProtos.Enums.PokemonTradingType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Enums.PokemonTradingType> UnlockedTrading {
      get { return unlockedTrading_; }
    }

    /// <summary>Field number for the "trading_discount" field.</summary>
    public const int TradingDiscountFieldNumber = 6;
    private float tradingDiscount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float TradingDiscount {
      get { return tradingDiscount_; }
      set {
        tradingDiscount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendshipLevelMilestoneSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendshipLevelMilestoneSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinPointsToReach != other.MinPointsToReach) return false;
      if (MilestoneXpReward != other.MilestoneXpReward) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AttackBonusPercentage, other.AttackBonusPercentage)) return false;
      if (RaidBallBonus != other.RaidBallBonus) return false;
      if(!unlockedTrading_.Equals(other.unlockedTrading_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TradingDiscount, other.TradingDiscount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MinPointsToReach != 0) hash ^= MinPointsToReach.GetHashCode();
      if (MilestoneXpReward != 0) hash ^= MilestoneXpReward.GetHashCode();
      if (AttackBonusPercentage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AttackBonusPercentage);
      if (RaidBallBonus != 0) hash ^= RaidBallBonus.GetHashCode();
      hash ^= unlockedTrading_.GetHashCode();
      if (TradingDiscount != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TradingDiscount);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MinPointsToReach != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinPointsToReach);
      }
      if (MilestoneXpReward != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MilestoneXpReward);
      }
      if (AttackBonusPercentage != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(AttackBonusPercentage);
      }
      if (RaidBallBonus != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RaidBallBonus);
      }
      unlockedTrading_.WriteTo(output, _repeated_unlockedTrading_codec);
      if (TradingDiscount != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(TradingDiscount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MinPointsToReach != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPointsToReach);
      }
      if (MilestoneXpReward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MilestoneXpReward);
      }
      if (AttackBonusPercentage != 0F) {
        size += 1 + 4;
      }
      if (RaidBallBonus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RaidBallBonus);
      }
      size += unlockedTrading_.CalculateSize(_repeated_unlockedTrading_codec);
      if (TradingDiscount != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendshipLevelMilestoneSettings other) {
      if (other == null) {
        return;
      }
      if (other.MinPointsToReach != 0) {
        MinPointsToReach = other.MinPointsToReach;
      }
      if (other.MilestoneXpReward != 0) {
        MilestoneXpReward = other.MilestoneXpReward;
      }
      if (other.AttackBonusPercentage != 0F) {
        AttackBonusPercentage = other.AttackBonusPercentage;
      }
      if (other.RaidBallBonus != 0) {
        RaidBallBonus = other.RaidBallBonus;
      }
      unlockedTrading_.Add(other.unlockedTrading_);
      if (other.TradingDiscount != 0F) {
        TradingDiscount = other.TradingDiscount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinPointsToReach = input.ReadInt32();
            break;
          }
          case 16: {
            MilestoneXpReward = input.ReadInt32();
            break;
          }
          case 29: {
            AttackBonusPercentage = input.ReadFloat();
            break;
          }
          case 32: {
            RaidBallBonus = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            unlockedTrading_.AddEntriesFrom(input, _repeated_unlockedTrading_codec);
            break;
          }
          case 53: {
            TradingDiscount = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
