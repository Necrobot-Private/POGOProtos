// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Settings/Master/EventBadgeSettings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Settings.Master {

  /// <summary>Holder for reflection information generated from POGOProtos/Settings/Master/EventBadgeSettings.proto</summary>
  public static partial class EventBadgeSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Settings/Master/EventBadgeSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventBadgeSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNQT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rlci9FdmVudEJhZGdlU2V0dGlu",
            "Z3MucHJvdG8SGlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyGiBQT0dPUHJv",
            "dG9zL0VudW1zL0JhZGdlVHlwZS5wcm90byKAAQoSRXZlbnRCYWRnZVNldHRp",
            "bmdzEhUKDXZhbGlkX2Zyb21fbXMYASABKAMSEwoLdmFsaWRfdG9fbXMYAiAB",
            "KAMSPgoZbXV0dWFsbHlfZXhjbHVzaXZlX2JhZGdlcxgDIAMoDjIbLlBPR09Q",
            "cm90b3MuRW51bXMuQmFkZ2VUeXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Enums.BadgeTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.Master.EventBadgeSettings), global::POGOProtos.Settings.Master.EventBadgeSettings.Parser, new[]{ "ValidFromMs", "ValidToMs", "MutuallyExclusiveBadges" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EventBadgeSettings : pb::IMessage<EventBadgeSettings> {
    private static readonly pb::MessageParser<EventBadgeSettings> _parser = new pb::MessageParser<EventBadgeSettings>(() => new EventBadgeSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventBadgeSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.Master.EventBadgeSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBadgeSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBadgeSettings(EventBadgeSettings other) : this() {
      validFromMs_ = other.validFromMs_;
      validToMs_ = other.validToMs_;
      mutuallyExclusiveBadges_ = other.mutuallyExclusiveBadges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBadgeSettings Clone() {
      return new EventBadgeSettings(this);
    }

    /// <summary>Field number for the "valid_from_ms" field.</summary>
    public const int ValidFromMsFieldNumber = 1;
    private long validFromMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValidFromMs {
      get { return validFromMs_; }
      set {
        validFromMs_ = value;
      }
    }

    /// <summary>Field number for the "valid_to_ms" field.</summary>
    public const int ValidToMsFieldNumber = 2;
    private long validToMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValidToMs {
      get { return validToMs_; }
      set {
        validToMs_ = value;
      }
    }

    /// <summary>Field number for the "mutually_exclusive_badges" field.</summary>
    public const int MutuallyExclusiveBadgesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::POGOProtos.Enums.BadgeType> _repeated_mutuallyExclusiveBadges_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::POGOProtos.Enums.BadgeType) x);
    private readonly pbc::RepeatedField<global::POGOProtos.Enums.BadgeType> mutuallyExclusiveBadges_ = new pbc::RepeatedField<global::POGOProtos.Enums.BadgeType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Enums.BadgeType> MutuallyExclusiveBadges {
      get { return mutuallyExclusiveBadges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventBadgeSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventBadgeSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValidFromMs != other.ValidFromMs) return false;
      if (ValidToMs != other.ValidToMs) return false;
      if(!mutuallyExclusiveBadges_.Equals(other.mutuallyExclusiveBadges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValidFromMs != 0L) hash ^= ValidFromMs.GetHashCode();
      if (ValidToMs != 0L) hash ^= ValidToMs.GetHashCode();
      hash ^= mutuallyExclusiveBadges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValidFromMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ValidFromMs);
      }
      if (ValidToMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ValidToMs);
      }
      mutuallyExclusiveBadges_.WriteTo(output, _repeated_mutuallyExclusiveBadges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValidFromMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValidFromMs);
      }
      if (ValidToMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValidToMs);
      }
      size += mutuallyExclusiveBadges_.CalculateSize(_repeated_mutuallyExclusiveBadges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventBadgeSettings other) {
      if (other == null) {
        return;
      }
      if (other.ValidFromMs != 0L) {
        ValidFromMs = other.ValidFromMs;
      }
      if (other.ValidToMs != 0L) {
        ValidToMs = other.ValidToMs;
      }
      mutuallyExclusiveBadges_.Add(other.mutuallyExclusiveBadges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValidFromMs = input.ReadInt64();
            break;
          }
          case 16: {
            ValidToMs = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            mutuallyExclusiveBadges_.AddEntriesFrom(input, _repeated_mutuallyExclusiveBadges_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
