// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Data/Telemetry/PokemonTelemetry.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Telemetry {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/Telemetry/PokemonTelemetry.proto</summary>
  public static partial class PokemonTelemetryReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/Telemetry/PokemonTelemetry.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PokemonTelemetryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBQT0dPUHJvdG9zL0RhdGEvVGVsZW1ldHJ5L1Bva2Vtb25UZWxlbWV0cnku",
            "cHJvdG8SGVBPR09Qcm90b3MuRGF0YS5UZWxlbWV0cnkibgoQUG9rZW1vblRl",
            "bGVtZXRyeRISCgpwb2tlbW9uX2lkGAEgASgFEgoKAmNwGAIgASgFEhEKCXdl",
            "aWdodF9rZxgDIAEoAhIQCghoZWlnaHRfbRgEIAEoAhIVCg1wb2tlbW9uX2xl",
            "dmVsGAUgASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Telemetry.PokemonTelemetry), global::POGOProtos.Data.Telemetry.PokemonTelemetry.Parser, new[]{ "PokemonId", "Cp", "WeightKg", "HeightM", "PokemonLevel" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PokemonTelemetry : pb::IMessage<PokemonTelemetry> {
    private static readonly pb::MessageParser<PokemonTelemetry> _parser = new pb::MessageParser<PokemonTelemetry>(() => new PokemonTelemetry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PokemonTelemetry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Telemetry.PokemonTelemetryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PokemonTelemetry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PokemonTelemetry(PokemonTelemetry other) : this() {
      pokemonId_ = other.pokemonId_;
      cp_ = other.cp_;
      weightKg_ = other.weightKg_;
      heightM_ = other.heightM_;
      pokemonLevel_ = other.pokemonLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PokemonTelemetry Clone() {
      return new PokemonTelemetry(this);
    }

    /// <summary>Field number for the "pokemon_id" field.</summary>
    public const int PokemonIdFieldNumber = 1;
    private int pokemonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PokemonId {
      get { return pokemonId_; }
      set {
        pokemonId_ = value;
      }
    }

    /// <summary>Field number for the "cp" field.</summary>
    public const int CpFieldNumber = 2;
    private int cp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cp {
      get { return cp_; }
      set {
        cp_ = value;
      }
    }

    /// <summary>Field number for the "weight_kg" field.</summary>
    public const int WeightKgFieldNumber = 3;
    private float weightKg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WeightKg {
      get { return weightKg_; }
      set {
        weightKg_ = value;
      }
    }

    /// <summary>Field number for the "height_m" field.</summary>
    public const int HeightMFieldNumber = 4;
    private float heightM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HeightM {
      get { return heightM_; }
      set {
        heightM_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_level" field.</summary>
    public const int PokemonLevelFieldNumber = 5;
    private int pokemonLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PokemonLevel {
      get { return pokemonLevel_; }
      set {
        pokemonLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PokemonTelemetry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PokemonTelemetry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PokemonId != other.PokemonId) return false;
      if (Cp != other.Cp) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WeightKg, other.WeightKg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HeightM, other.HeightM)) return false;
      if (PokemonLevel != other.PokemonLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PokemonId != 0) hash ^= PokemonId.GetHashCode();
      if (Cp != 0) hash ^= Cp.GetHashCode();
      if (WeightKg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WeightKg);
      if (HeightM != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HeightM);
      if (PokemonLevel != 0) hash ^= PokemonLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PokemonId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PokemonId);
      }
      if (Cp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cp);
      }
      if (WeightKg != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(WeightKg);
      }
      if (HeightM != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(HeightM);
      }
      if (PokemonLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PokemonLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PokemonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PokemonId);
      }
      if (Cp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cp);
      }
      if (WeightKg != 0F) {
        size += 1 + 4;
      }
      if (HeightM != 0F) {
        size += 1 + 4;
      }
      if (PokemonLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PokemonLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PokemonTelemetry other) {
      if (other == null) {
        return;
      }
      if (other.PokemonId != 0) {
        PokemonId = other.PokemonId;
      }
      if (other.Cp != 0) {
        Cp = other.Cp;
      }
      if (other.WeightKg != 0F) {
        WeightKg = other.WeightKg;
      }
      if (other.HeightM != 0F) {
        HeightM = other.HeightM;
      }
      if (other.PokemonLevel != 0) {
        PokemonLevel = other.PokemonLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PokemonId = input.ReadInt32();
            break;
          }
          case 16: {
            Cp = input.ReadInt32();
            break;
          }
          case 29: {
            WeightKg = input.ReadFloat();
            break;
          }
          case 37: {
            HeightM = input.ReadFloat();
            break;
          }
          case 40: {
            PokemonLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
