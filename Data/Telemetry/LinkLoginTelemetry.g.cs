// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Data/Telemetry/LinkLoginTelemetry.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Telemetry {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/Telemetry/LinkLoginTelemetry.proto</summary>
  public static partial class LinkLoginTelemetryReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/Telemetry/LinkLoginTelemetry.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LinkLoginTelemetryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJQT0dPUHJvdG9zL0RhdGEvVGVsZW1ldHJ5L0xpbmtMb2dpblRlbGVtZXRy",
            "eS5wcm90bxIZUE9HT1Byb3Rvcy5EYXRhLlRlbGVtZXRyeSJ3ChJMaW5rTG9n",
            "aW5UZWxlbWV0cnkSDgoGbGlua2VkGAEgASgIEg8KB3N1Y2Nlc3MYAiABKAkS",
            "DQoFZXJyb3IYAyABKAkSHwoXYWN0aXZlX2F1dGhfcHJvdmlkZXJfaWQYBCAB",
            "KAkSEAoIcHJvdmlkZXIYBSABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Telemetry.LinkLoginTelemetry), global::POGOProtos.Data.Telemetry.LinkLoginTelemetry.Parser, new[]{ "Linked", "Success", "Error", "ActiveAuthProviderId", "Provider" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LinkLoginTelemetry : pb::IMessage<LinkLoginTelemetry> {
    private static readonly pb::MessageParser<LinkLoginTelemetry> _parser = new pb::MessageParser<LinkLoginTelemetry>(() => new LinkLoginTelemetry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LinkLoginTelemetry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Telemetry.LinkLoginTelemetryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinkLoginTelemetry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinkLoginTelemetry(LinkLoginTelemetry other) : this() {
      linked_ = other.linked_;
      success_ = other.success_;
      error_ = other.error_;
      activeAuthProviderId_ = other.activeAuthProviderId_;
      provider_ = other.provider_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinkLoginTelemetry Clone() {
      return new LinkLoginTelemetry(this);
    }

    /// <summary>Field number for the "linked" field.</summary>
    public const int LinkedFieldNumber = 1;
    private bool linked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Linked {
      get { return linked_; }
      set {
        linked_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private string success_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Success {
      get { return success_; }
      set {
        success_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active_auth_provider_id" field.</summary>
    public const int ActiveAuthProviderIdFieldNumber = 4;
    private string activeAuthProviderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActiveAuthProviderId {
      get { return activeAuthProviderId_; }
      set {
        activeAuthProviderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 5;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LinkLoginTelemetry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LinkLoginTelemetry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Linked != other.Linked) return false;
      if (Success != other.Success) return false;
      if (Error != other.Error) return false;
      if (ActiveAuthProviderId != other.ActiveAuthProviderId) return false;
      if (Provider != other.Provider) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Linked != false) hash ^= Linked.GetHashCode();
      if (Success.Length != 0) hash ^= Success.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (ActiveAuthProviderId.Length != 0) hash ^= ActiveAuthProviderId.GetHashCode();
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Linked != false) {
        output.WriteRawTag(8);
        output.WriteBool(Linked);
      }
      if (Success.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Success);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Error);
      }
      if (ActiveAuthProviderId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ActiveAuthProviderId);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Provider);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Linked != false) {
        size += 1 + 1;
      }
      if (Success.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Success);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (ActiveAuthProviderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActiveAuthProviderId);
      }
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LinkLoginTelemetry other) {
      if (other == null) {
        return;
      }
      if (other.Linked != false) {
        Linked = other.Linked;
      }
      if (other.Success.Length != 0) {
        Success = other.Success;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.ActiveAuthProviderId.Length != 0) {
        ActiveAuthProviderId = other.ActiveAuthProviderId;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Linked = input.ReadBool();
            break;
          }
          case 18: {
            Success = input.ReadString();
            break;
          }
          case 26: {
            Error = input.ReadString();
            break;
          }
          case 34: {
            ActiveAuthProviderId = input.ReadString();
            break;
          }
          case 42: {
            Provider = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
