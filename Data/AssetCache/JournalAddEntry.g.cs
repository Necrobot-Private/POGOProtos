// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Data/AssetCache/JournalAddEntry.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.AssetCache {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/AssetCache/JournalAddEntry.proto</summary>
  public static partial class JournalAddEntryReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/AssetCache/JournalAddEntry.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JournalAddEntryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBQT0dPUHJvdG9zL0RhdGEvQXNzZXRDYWNoZS9Kb3VybmFsQWRkRW50cnku",
            "cHJvdG8SGlBPR09Qcm90b3MuRGF0YS5Bc3NldENhY2hlGipQT0dPUHJvdG9z",
            "L0RhdGEvQXNzZXRDYWNoZS9IYXNoZWRLZXkucHJvdG8iYAoPSm91cm5hbEFk",
            "ZEVudHJ5EjkKCmhhc2hlZF9rZXkYASABKAsyJS5QT0dPUHJvdG9zLkRhdGEu",
            "QXNzZXRDYWNoZS5IYXNoZWRLZXkSEgoKZW50cnlfc2l6ZRgCIAEoA2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Data.AssetCache.HashedKeyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.AssetCache.JournalAddEntry), global::POGOProtos.Data.AssetCache.JournalAddEntry.Parser, new[]{ "HashedKey", "EntrySize" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class JournalAddEntry : pb::IMessage<JournalAddEntry> {
    private static readonly pb::MessageParser<JournalAddEntry> _parser = new pb::MessageParser<JournalAddEntry>(() => new JournalAddEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JournalAddEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.AssetCache.JournalAddEntryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JournalAddEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JournalAddEntry(JournalAddEntry other) : this() {
      hashedKey_ = other.hashedKey_ != null ? other.hashedKey_.Clone() : null;
      entrySize_ = other.entrySize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JournalAddEntry Clone() {
      return new JournalAddEntry(this);
    }

    /// <summary>Field number for the "hashed_key" field.</summary>
    public const int HashedKeyFieldNumber = 1;
    private global::POGOProtos.Data.AssetCache.HashedKey hashedKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.AssetCache.HashedKey HashedKey {
      get { return hashedKey_; }
      set {
        hashedKey_ = value;
      }
    }

    /// <summary>Field number for the "entry_size" field.</summary>
    public const int EntrySizeFieldNumber = 2;
    private long entrySize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EntrySize {
      get { return entrySize_; }
      set {
        entrySize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JournalAddEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JournalAddEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HashedKey, other.HashedKey)) return false;
      if (EntrySize != other.EntrySize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hashedKey_ != null) hash ^= HashedKey.GetHashCode();
      if (EntrySize != 0L) hash ^= EntrySize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hashedKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HashedKey);
      }
      if (EntrySize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EntrySize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hashedKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HashedKey);
      }
      if (EntrySize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EntrySize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JournalAddEntry other) {
      if (other == null) {
        return;
      }
      if (other.hashedKey_ != null) {
        if (hashedKey_ == null) {
          hashedKey_ = new global::POGOProtos.Data.AssetCache.HashedKey();
        }
        HashedKey.MergeFrom(other.HashedKey);
      }
      if (other.EntrySize != 0L) {
        EntrySize = other.EntrySize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hashedKey_ == null) {
              hashedKey_ = new global::POGOProtos.Data.AssetCache.HashedKey();
            }
            input.ReadMessage(hashedKey_);
            break;
          }
          case 16: {
            EntrySize = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
