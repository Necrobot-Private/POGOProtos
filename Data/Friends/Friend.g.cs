// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Data/Friends/Friend.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Friends {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/Friends/Friend.proto</summary>
  public static partial class FriendReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/Friends/Friend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FriendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRQT0dPUHJvdG9zL0RhdGEvRnJpZW5kcy9GcmllbmQucHJvdG8SF1BPR09Q",
            "cm90b3MuRGF0YS5GcmllbmRzIoUBCgZGcmllbmQSEQoJcGxheWVyX2lkGAEg",
            "ASgJEhAKCGNvZGVuYW1lGAIgASgJEgwKBHRlYW0YAyABKAkSDQoFc2NvcmUY",
            "BCABKAUSFAoMZGF0YV93aXRoX21lGAUgASgMEg8KB3ZlcnNpb24YBiABKAMS",
            "EgoKY3JlYXRlZF9tcxgHIAEoA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Friends.Friend), global::POGOProtos.Data.Friends.Friend.Parser, new[]{ "PlayerId", "Codename", "Team", "Score", "DataWithMe", "Version", "CreatedMs" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Friend : pb::IMessage<Friend> {
    private static readonly pb::MessageParser<Friend> _parser = new pb::MessageParser<Friend>(() => new Friend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Friend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Friends.FriendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Friend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Friend(Friend other) : this() {
      playerId_ = other.playerId_;
      codename_ = other.codename_;
      team_ = other.team_;
      score_ = other.score_;
      dataWithMe_ = other.dataWithMe_;
      version_ = other.version_;
      createdMs_ = other.createdMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Friend Clone() {
      return new Friend(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "codename" field.</summary>
    public const int CodenameFieldNumber = 2;
    private string codename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Codename {
      get { return codename_; }
      set {
        codename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 3;
    private string team_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Team {
      get { return team_; }
      set {
        team_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "data_with_me" field.</summary>
    public const int DataWithMeFieldNumber = 5;
    private pb::ByteString dataWithMe_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataWithMe {
      get { return dataWithMe_; }
      set {
        dataWithMe_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 6;
    private long version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "created_ms" field.</summary>
    public const int CreatedMsFieldNumber = 7;
    private long createdMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedMs {
      get { return createdMs_; }
      set {
        createdMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Friend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Friend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Codename != other.Codename) return false;
      if (Team != other.Team) return false;
      if (Score != other.Score) return false;
      if (DataWithMe != other.DataWithMe) return false;
      if (Version != other.Version) return false;
      if (CreatedMs != other.CreatedMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (Codename.Length != 0) hash ^= Codename.GetHashCode();
      if (Team.Length != 0) hash ^= Team.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (DataWithMe.Length != 0) hash ^= DataWithMe.GetHashCode();
      if (Version != 0L) hash ^= Version.GetHashCode();
      if (CreatedMs != 0L) hash ^= CreatedMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (Codename.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Codename);
      }
      if (Team.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Team);
      }
      if (Score != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (DataWithMe.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(DataWithMe);
      }
      if (Version != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Version);
      }
      if (CreatedMs != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CreatedMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (Codename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Codename);
      }
      if (Team.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Team);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (DataWithMe.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataWithMe);
      }
      if (Version != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Version);
      }
      if (CreatedMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Friend other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Codename.Length != 0) {
        Codename = other.Codename;
      }
      if (other.Team.Length != 0) {
        Team = other.Team;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.DataWithMe.Length != 0) {
        DataWithMe = other.DataWithMe;
      }
      if (other.Version != 0L) {
        Version = other.Version;
      }
      if (other.CreatedMs != 0L) {
        CreatedMs = other.CreatedMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            Codename = input.ReadString();
            break;
          }
          case 26: {
            Team = input.ReadString();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
          case 42: {
            DataWithMe = input.ReadBytes();
            break;
          }
          case 48: {
            Version = input.ReadInt64();
            break;
          }
          case 56: {
            CreatedMs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
