// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Data/Raid/ExclusiveRaidCancellation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Raid {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/Raid/ExclusiveRaidCancellation.proto</summary>
  public static partial class ExclusiveRaidCancellationReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/Raid/ExclusiveRaidCancellation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExclusiveRaidCancellationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjRQT0dPUHJvdG9zL0RhdGEvUmFpZC9FeGNsdXNpdmVSYWlkQ2FuY2VsbGF0",
            "aW9uLnByb3RvEhRQT0dPUHJvdG9zLkRhdGEuUmFpZBojUE9HT1Byb3Rvcy9J",
            "bnZlbnRvcnkvTG9vdEl0ZW0ucHJvdG8i0wEKGUV4Y2x1c2l2ZVJhaWRDYW5j",
            "ZWxsYXRpb24SDwoHZm9ydF9pZBgBIAEoCRIVCg1zdGFydF90aW1lX21zGAIg",
            "ASgDEhMKC2VuZF90aW1lX21zGAMgASgDEhEKCWltYWdlX3VybBgEIAEoCRIQ",
            "CghsYXRpdHVkZRgFIAEoARIRCglsb25naXR1ZGUYBiABKAESEAoIZ3ltX25h",
            "bWUYByABKAkSLwoHcmV3YXJkcxgIIAMoCzIeLlBPR09Qcm90b3MuSW52ZW50",
            "b3J5Lkxvb3RJdGVtYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Inventory.LootItemReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Raid.ExclusiveRaidCancellation), global::POGOProtos.Data.Raid.ExclusiveRaidCancellation.Parser, new[]{ "FortId", "StartTimeMs", "EndTimeMs", "ImageUrl", "Latitude", "Longitude", "GymName", "Rewards" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ExclusiveRaidCancellation : pb::IMessage<ExclusiveRaidCancellation> {
    private static readonly pb::MessageParser<ExclusiveRaidCancellation> _parser = new pb::MessageParser<ExclusiveRaidCancellation>(() => new ExclusiveRaidCancellation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExclusiveRaidCancellation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Raid.ExclusiveRaidCancellationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExclusiveRaidCancellation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExclusiveRaidCancellation(ExclusiveRaidCancellation other) : this() {
      fortId_ = other.fortId_;
      startTimeMs_ = other.startTimeMs_;
      endTimeMs_ = other.endTimeMs_;
      imageUrl_ = other.imageUrl_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      gymName_ = other.gymName_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExclusiveRaidCancellation Clone() {
      return new ExclusiveRaidCancellation(this);
    }

    /// <summary>Field number for the "fort_id" field.</summary>
    public const int FortIdFieldNumber = 1;
    private string fortId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FortId {
      get { return fortId_; }
      set {
        fortId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time_ms" field.</summary>
    public const int StartTimeMsFieldNumber = 2;
    private long startTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTimeMs {
      get { return startTimeMs_; }
      set {
        startTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "end_time_ms" field.</summary>
    public const int EndTimeMsFieldNumber = 3;
    private long endTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTimeMs {
      get { return endTimeMs_; }
      set {
        endTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "image_url" field.</summary>
    public const int ImageUrlFieldNumber = 4;
    private string imageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 5;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 6;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "gym_name" field.</summary>
    public const int GymNameFieldNumber = 7;
    private string gymName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GymName {
      get { return gymName_; }
      set {
        gymName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.LootItem> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(66, global::POGOProtos.Inventory.LootItem.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.LootItem> rewards_ = new pbc::RepeatedField<global::POGOProtos.Inventory.LootItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.LootItem> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExclusiveRaidCancellation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExclusiveRaidCancellation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FortId != other.FortId) return false;
      if (StartTimeMs != other.StartTimeMs) return false;
      if (EndTimeMs != other.EndTimeMs) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (GymName != other.GymName) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FortId.Length != 0) hash ^= FortId.GetHashCode();
      if (StartTimeMs != 0L) hash ^= StartTimeMs.GetHashCode();
      if (EndTimeMs != 0L) hash ^= EndTimeMs.GetHashCode();
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (GymName.Length != 0) hash ^= GymName.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FortId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FortId);
      }
      if (StartTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTimeMs);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ImageUrl);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Longitude);
      }
      if (GymName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GymName);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FortId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FortId);
      }
      if (StartTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimeMs);
      }
      if (EndTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimeMs);
      }
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (GymName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GymName);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExclusiveRaidCancellation other) {
      if (other == null) {
        return;
      }
      if (other.FortId.Length != 0) {
        FortId = other.FortId;
      }
      if (other.StartTimeMs != 0L) {
        StartTimeMs = other.StartTimeMs;
      }
      if (other.EndTimeMs != 0L) {
        EndTimeMs = other.EndTimeMs;
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.GymName.Length != 0) {
        GymName = other.GymName;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FortId = input.ReadString();
            break;
          }
          case 16: {
            StartTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            EndTimeMs = input.ReadInt64();
            break;
          }
          case 34: {
            ImageUrl = input.ReadString();
            break;
          }
          case 41: {
            Latitude = input.ReadDouble();
            break;
          }
          case 49: {
            Longitude = input.ReadDouble();
            break;
          }
          case 58: {
            GymName = input.ReadString();
            break;
          }
          case 66: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
