// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Data/Raid/Lobby.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Raid {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/Raid/Lobby.proto</summary>
  public static partial class LobbyReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/Raid/Lobby.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LobbyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBQT0dPUHJvdG9zL0RhdGEvUmFpZC9Mb2JieS5wcm90bxIUUE9HT1Byb3Rv",
            "cy5EYXRhLlJhaWQaLlBPR09Qcm90b3MvRGF0YS9CYXR0bGUvQmF0dGxlUGFy",
            "dGljaXBhbnQucHJvdG8aJ1BPR09Qcm90b3MvRW51bXMvV2VhdGhlckNvbmRp",
            "dGlvbi5wcm90byKAAwoFTG9iYnkSEAoIbG9iYnlfaWQYASADKAUSOgoHcGxh",
            "eWVycxgCIAMoCzIpLlBPR09Qcm90b3MuRGF0YS5CYXR0bGUuQmF0dGxlUGFy",
            "dGljaXBhbnQSGgoScGxheWVyX2pvaW5fZW5kX21zGAMgASgDEiAKGHBva2Vt",
            "b25fc2VsZWN0aW9uX2VuZF9tcxgEIAEoAxIcChRyYWlkX2JhdHRsZV9zdGFy",
            "dF9tcxgFIAEoAxIaChJyYWlkX2JhdHRsZV9lbmRfbXMYBiABKAMSFgoOcmFp",
            "ZF9iYXR0bGVfaWQYCCABKAkSFgoOb3duZXJfbmlja25hbWUYCSABKAkSDwoH",
            "cHJpdmF0ZRgKIAEoCBITCgtjcmVhdGlvbl9tcxgLIAEoAxIcChRiYXR0bGVf",
            "cGxmZV9pbnN0YW5jZRgMIAEoBRI9ChF3ZWF0aGVyX2NvbmRpdGlvbhgNIAEo",
            "DjIiLlBPR09Qcm90b3MuRW51bXMuV2VhdGhlckNvbmRpdGlvbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Data.Battle.BattleParticipantReflection.Descriptor, global::POGOProtos.Enums.WeatherConditionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Raid.Lobby), global::POGOProtos.Data.Raid.Lobby.Parser, new[]{ "LobbyId", "Players", "PlayerJoinEndMs", "PokemonSelectionEndMs", "RaidBattleStartMs", "RaidBattleEndMs", "RaidBattleId", "OwnerNickname", "Private", "CreationMs", "BattlePlfeInstance", "WeatherCondition" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Lobby : pb::IMessage<Lobby> {
    private static readonly pb::MessageParser<Lobby> _parser = new pb::MessageParser<Lobby>(() => new Lobby());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Lobby> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Raid.LobbyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lobby() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lobby(Lobby other) : this() {
      lobbyId_ = other.lobbyId_.Clone();
      players_ = other.players_.Clone();
      playerJoinEndMs_ = other.playerJoinEndMs_;
      pokemonSelectionEndMs_ = other.pokemonSelectionEndMs_;
      raidBattleStartMs_ = other.raidBattleStartMs_;
      raidBattleEndMs_ = other.raidBattleEndMs_;
      raidBattleId_ = other.raidBattleId_;
      ownerNickname_ = other.ownerNickname_;
      private_ = other.private_;
      creationMs_ = other.creationMs_;
      battlePlfeInstance_ = other.battlePlfeInstance_;
      weatherCondition_ = other.weatherCondition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lobby Clone() {
      return new Lobby(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_lobbyId_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> lobbyId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LobbyId {
      get { return lobbyId_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.Battle.BattleParticipant> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::POGOProtos.Data.Battle.BattleParticipant.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.Battle.BattleParticipant> players_ = new pbc::RepeatedField<global::POGOProtos.Data.Battle.BattleParticipant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.Battle.BattleParticipant> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "player_join_end_ms" field.</summary>
    public const int PlayerJoinEndMsFieldNumber = 3;
    private long playerJoinEndMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerJoinEndMs {
      get { return playerJoinEndMs_; }
      set {
        playerJoinEndMs_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_selection_end_ms" field.</summary>
    public const int PokemonSelectionEndMsFieldNumber = 4;
    private long pokemonSelectionEndMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PokemonSelectionEndMs {
      get { return pokemonSelectionEndMs_; }
      set {
        pokemonSelectionEndMs_ = value;
      }
    }

    /// <summary>Field number for the "raid_battle_start_ms" field.</summary>
    public const int RaidBattleStartMsFieldNumber = 5;
    private long raidBattleStartMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RaidBattleStartMs {
      get { return raidBattleStartMs_; }
      set {
        raidBattleStartMs_ = value;
      }
    }

    /// <summary>Field number for the "raid_battle_end_ms" field.</summary>
    public const int RaidBattleEndMsFieldNumber = 6;
    private long raidBattleEndMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RaidBattleEndMs {
      get { return raidBattleEndMs_; }
      set {
        raidBattleEndMs_ = value;
      }
    }

    /// <summary>Field number for the "raid_battle_id" field.</summary>
    public const int RaidBattleIdFieldNumber = 8;
    private string raidBattleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RaidBattleId {
      get { return raidBattleId_; }
      set {
        raidBattleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_nickname" field.</summary>
    public const int OwnerNicknameFieldNumber = 9;
    private string ownerNickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerNickname {
      get { return ownerNickname_; }
      set {
        ownerNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "private" field.</summary>
    public const int PrivateFieldNumber = 10;
    private bool private_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Private {
      get { return private_; }
      set {
        private_ = value;
      }
    }

    /// <summary>Field number for the "creation_ms" field.</summary>
    public const int CreationMsFieldNumber = 11;
    private long creationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationMs {
      get { return creationMs_; }
      set {
        creationMs_ = value;
      }
    }

    /// <summary>Field number for the "battle_plfe_instance" field.</summary>
    public const int BattlePlfeInstanceFieldNumber = 12;
    private int battlePlfeInstance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BattlePlfeInstance {
      get { return battlePlfeInstance_; }
      set {
        battlePlfeInstance_ = value;
      }
    }

    /// <summary>Field number for the "weather_condition" field.</summary>
    public const int WeatherConditionFieldNumber = 13;
    private global::POGOProtos.Enums.WeatherCondition weatherCondition_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Enums.WeatherCondition WeatherCondition {
      get { return weatherCondition_; }
      set {
        weatherCondition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Lobby);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Lobby other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lobbyId_.Equals(other.lobbyId_)) return false;
      if(!players_.Equals(other.players_)) return false;
      if (PlayerJoinEndMs != other.PlayerJoinEndMs) return false;
      if (PokemonSelectionEndMs != other.PokemonSelectionEndMs) return false;
      if (RaidBattleStartMs != other.RaidBattleStartMs) return false;
      if (RaidBattleEndMs != other.RaidBattleEndMs) return false;
      if (RaidBattleId != other.RaidBattleId) return false;
      if (OwnerNickname != other.OwnerNickname) return false;
      if (Private != other.Private) return false;
      if (CreationMs != other.CreationMs) return false;
      if (BattlePlfeInstance != other.BattlePlfeInstance) return false;
      if (WeatherCondition != other.WeatherCondition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lobbyId_.GetHashCode();
      hash ^= players_.GetHashCode();
      if (PlayerJoinEndMs != 0L) hash ^= PlayerJoinEndMs.GetHashCode();
      if (PokemonSelectionEndMs != 0L) hash ^= PokemonSelectionEndMs.GetHashCode();
      if (RaidBattleStartMs != 0L) hash ^= RaidBattleStartMs.GetHashCode();
      if (RaidBattleEndMs != 0L) hash ^= RaidBattleEndMs.GetHashCode();
      if (RaidBattleId.Length != 0) hash ^= RaidBattleId.GetHashCode();
      if (OwnerNickname.Length != 0) hash ^= OwnerNickname.GetHashCode();
      if (Private != false) hash ^= Private.GetHashCode();
      if (CreationMs != 0L) hash ^= CreationMs.GetHashCode();
      if (BattlePlfeInstance != 0) hash ^= BattlePlfeInstance.GetHashCode();
      if (WeatherCondition != 0) hash ^= WeatherCondition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lobbyId_.WriteTo(output, _repeated_lobbyId_codec);
      players_.WriteTo(output, _repeated_players_codec);
      if (PlayerJoinEndMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PlayerJoinEndMs);
      }
      if (PokemonSelectionEndMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(PokemonSelectionEndMs);
      }
      if (RaidBattleStartMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RaidBattleStartMs);
      }
      if (RaidBattleEndMs != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RaidBattleEndMs);
      }
      if (RaidBattleId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RaidBattleId);
      }
      if (OwnerNickname.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(OwnerNickname);
      }
      if (Private != false) {
        output.WriteRawTag(80);
        output.WriteBool(Private);
      }
      if (CreationMs != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(CreationMs);
      }
      if (BattlePlfeInstance != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BattlePlfeInstance);
      }
      if (WeatherCondition != 0) {
        output.WriteRawTag(104);
        output.WriteEnum((int) WeatherCondition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lobbyId_.CalculateSize(_repeated_lobbyId_codec);
      size += players_.CalculateSize(_repeated_players_codec);
      if (PlayerJoinEndMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerJoinEndMs);
      }
      if (PokemonSelectionEndMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PokemonSelectionEndMs);
      }
      if (RaidBattleStartMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RaidBattleStartMs);
      }
      if (RaidBattleEndMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RaidBattleEndMs);
      }
      if (RaidBattleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RaidBattleId);
      }
      if (OwnerNickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerNickname);
      }
      if (Private != false) {
        size += 1 + 1;
      }
      if (CreationMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationMs);
      }
      if (BattlePlfeInstance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattlePlfeInstance);
      }
      if (WeatherCondition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeatherCondition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Lobby other) {
      if (other == null) {
        return;
      }
      lobbyId_.Add(other.lobbyId_);
      players_.Add(other.players_);
      if (other.PlayerJoinEndMs != 0L) {
        PlayerJoinEndMs = other.PlayerJoinEndMs;
      }
      if (other.PokemonSelectionEndMs != 0L) {
        PokemonSelectionEndMs = other.PokemonSelectionEndMs;
      }
      if (other.RaidBattleStartMs != 0L) {
        RaidBattleStartMs = other.RaidBattleStartMs;
      }
      if (other.RaidBattleEndMs != 0L) {
        RaidBattleEndMs = other.RaidBattleEndMs;
      }
      if (other.RaidBattleId.Length != 0) {
        RaidBattleId = other.RaidBattleId;
      }
      if (other.OwnerNickname.Length != 0) {
        OwnerNickname = other.OwnerNickname;
      }
      if (other.Private != false) {
        Private = other.Private;
      }
      if (other.CreationMs != 0L) {
        CreationMs = other.CreationMs;
      }
      if (other.BattlePlfeInstance != 0) {
        BattlePlfeInstance = other.BattlePlfeInstance;
      }
      if (other.WeatherCondition != 0) {
        WeatherCondition = other.WeatherCondition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            lobbyId_.AddEntriesFrom(input, _repeated_lobbyId_codec);
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 24: {
            PlayerJoinEndMs = input.ReadInt64();
            break;
          }
          case 32: {
            PokemonSelectionEndMs = input.ReadInt64();
            break;
          }
          case 40: {
            RaidBattleStartMs = input.ReadInt64();
            break;
          }
          case 48: {
            RaidBattleEndMs = input.ReadInt64();
            break;
          }
          case 66: {
            RaidBattleId = input.ReadString();
            break;
          }
          case 74: {
            OwnerNickname = input.ReadString();
            break;
          }
          case 80: {
            Private = input.ReadBool();
            break;
          }
          case 88: {
            CreationMs = input.ReadInt64();
            break;
          }
          case 96: {
            BattlePlfeInstance = input.ReadInt32();
            break;
          }
          case 104: {
            weatherCondition_ = (global::POGOProtos.Enums.WeatherCondition) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
