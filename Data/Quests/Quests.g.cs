// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Data/Quests/Quests.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Quests {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/Quests/Quests.proto</summary>
  public static partial class QuestsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/Quests/Quests.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QuestsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNQT0dPUHJvdG9zL0RhdGEvUXVlc3RzL1F1ZXN0cy5wcm90bxIWUE9HT1By",
            "b3Rvcy5EYXRhLlF1ZXN0cxoiUE9HT1Byb3Rvcy9EYXRhL1F1ZXN0cy9RdWVz",
            "dC5wcm90bxoyUE9HT1Byb3Rvcy9EYXRhL1F1ZXN0cy9RdWVzdFBva2Vtb25F",
            "bmNvdW50ZXIucHJvdG8aK1BPR09Qcm90b3MvRGF0YS9RdWVzdHMvUXVlc3RT",
            "dGFtcENhcmQucHJvdG8i4QEKBlF1ZXN0cxIsCgVxdWVzdBgBIAMoCzIdLlBP",
            "R09Qcm90b3MuRGF0YS5RdWVzdHMuUXVlc3QSHQoVY29tcGxldGVkX3N0b3J5",
            "X3F1ZXN0GAIgAygJEk4KF3F1ZXN0X3Bva2Vtb25fZW5jb3VudGVyGAMgAygL",
            "Mi0uUE9HT1Byb3Rvcy5EYXRhLlF1ZXN0cy5RdWVzdFBva2Vtb25FbmNvdW50",
            "ZXISOgoKc3RhbXBfY2FyZBgEIAEoCzImLlBPR09Qcm90b3MuRGF0YS5RdWVz",
            "dHMuUXVlc3RTdGFtcENhcmRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Data.Quests.QuestReflection.Descriptor, global::POGOProtos.Data.Quests.QuestPokemonEncounterReflection.Descriptor, global::POGOProtos.Data.Quests.QuestStampCardReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Quests.Quests), global::POGOProtos.Data.Quests.Quests.Parser, new[]{ "Quest", "CompletedStoryQuest", "QuestPokemonEncounter", "StampCard" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Quests : pb::IMessage<Quests> {
    private static readonly pb::MessageParser<Quests> _parser = new pb::MessageParser<Quests>(() => new Quests());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Quests> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Quests.QuestsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Quests() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Quests(Quests other) : this() {
      quest_ = other.quest_.Clone();
      completedStoryQuest_ = other.completedStoryQuest_.Clone();
      questPokemonEncounter_ = other.questPokemonEncounter_.Clone();
      StampCard = other.stampCard_ != null ? other.StampCard.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Quests Clone() {
      return new Quests(this);
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.Quests.Quest> _repeated_quest_codec
        = pb::FieldCodec.ForMessage(10, global::POGOProtos.Data.Quests.Quest.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.Quests.Quest> quest_ = new pbc::RepeatedField<global::POGOProtos.Data.Quests.Quest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.Quests.Quest> Quest {
      get { return quest_; }
    }

    /// <summary>Field number for the "completed_story_quest" field.</summary>
    public const int CompletedStoryQuestFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_completedStoryQuest_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> completedStoryQuest_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CompletedStoryQuest {
      get { return completedStoryQuest_; }
    }

    /// <summary>Field number for the "quest_pokemon_encounter" field.</summary>
    public const int QuestPokemonEncounterFieldNumber = 3;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.Quests.QuestPokemonEncounter> _repeated_questPokemonEncounter_codec
        = pb::FieldCodec.ForMessage(26, global::POGOProtos.Data.Quests.QuestPokemonEncounter.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.Quests.QuestPokemonEncounter> questPokemonEncounter_ = new pbc::RepeatedField<global::POGOProtos.Data.Quests.QuestPokemonEncounter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.Quests.QuestPokemonEncounter> QuestPokemonEncounter {
      get { return questPokemonEncounter_; }
    }

    /// <summary>Field number for the "stamp_card" field.</summary>
    public const int StampCardFieldNumber = 4;
    private global::POGOProtos.Data.Quests.QuestStampCard stampCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Quests.QuestStampCard StampCard {
      get { return stampCard_; }
      set {
        stampCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Quests);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Quests other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!quest_.Equals(other.quest_)) return false;
      if(!completedStoryQuest_.Equals(other.completedStoryQuest_)) return false;
      if(!questPokemonEncounter_.Equals(other.questPokemonEncounter_)) return false;
      if (!object.Equals(StampCard, other.StampCard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= quest_.GetHashCode();
      hash ^= completedStoryQuest_.GetHashCode();
      hash ^= questPokemonEncounter_.GetHashCode();
      if (stampCard_ != null) hash ^= StampCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      quest_.WriteTo(output, _repeated_quest_codec);
      completedStoryQuest_.WriteTo(output, _repeated_completedStoryQuest_codec);
      questPokemonEncounter_.WriteTo(output, _repeated_questPokemonEncounter_codec);
      if (stampCard_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StampCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += quest_.CalculateSize(_repeated_quest_codec);
      size += completedStoryQuest_.CalculateSize(_repeated_completedStoryQuest_codec);
      size += questPokemonEncounter_.CalculateSize(_repeated_questPokemonEncounter_codec);
      if (stampCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StampCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Quests other) {
      if (other == null) {
        return;
      }
      quest_.Add(other.quest_);
      completedStoryQuest_.Add(other.completedStoryQuest_);
      questPokemonEncounter_.Add(other.questPokemonEncounter_);
      if (other.stampCard_ != null) {
        if (stampCard_ == null) {
          stampCard_ = new global::POGOProtos.Data.Quests.QuestStampCard();
        }
        StampCard.MergeFrom(other.StampCard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            quest_.AddEntriesFrom(input, _repeated_quest_codec);
            break;
          }
          case 18: {
            completedStoryQuest_.AddEntriesFrom(input, _repeated_completedStoryQuest_codec);
            break;
          }
          case 26: {
            questPokemonEncounter_.AddEntriesFrom(input, _repeated_questPokemonEncounter_codec);
            break;
          }
          case 34: {
            if (stampCard_ == null) {
              stampCard_ = new global::POGOProtos.Data.Quests.QuestStampCard();
            }
            input.ReadMessage(stampCard_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
