// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Quests/QuestReward.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Quests {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/Quests/QuestReward.proto</summary>
  public static partial class QuestRewardReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/Quests/QuestReward.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QuestRewardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihQT0dPUHJvdG9zL0RhdGEvUXVlc3RzL1F1ZXN0UmV3YXJkLnByb3RvEhZQ",
            "T0dPUHJvdG9zLkRhdGEuUXVlc3RzIooCCgtRdWVzdFJld2FyZBI2CgR0eXBl",
            "GAEgASgOMiguUE9HT1Byb3Rvcy5EYXRhLlF1ZXN0cy5RdWVzdFJld2FyZC5U",
            "eXBlEg4KBmFtb3VudBgCIAEoBRIVCg1wb2tlbW9uX2luZGV4GAMgASgFEg8K",
            "B2l0ZW1faWQYBCABKAUSGQoRcXVlc3RfdGVtcGxhdGVfaWQYBSABKAkicAoE",
            "VHlwZRIOCgpFWFBFUklFTkNFEAASCAoESVRFTRABEhUKEVBPS0VNT05fRU5D",
            "T1VOVEVSEAISDAoIU1RBUkRVU1QQAxIJCgVDQU5EWRAEEhMKD0FWQVRBUl9D",
            "TE9USElORxAFEgkKBVFVRVNUEAZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Quests.QuestReward), global::POGOProtos.Data.Quests.QuestReward.Parser, new[]{ "Type", "Amount", "PokemonIndex", "ItemId", "QuestTemplateId" }, null, new[]{ typeof(global::POGOProtos.Data.Quests.QuestReward.Types.Type) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class QuestReward : pb::IMessage<QuestReward> {
    private static readonly pb::MessageParser<QuestReward> _parser = new pb::MessageParser<QuestReward>(() => new QuestReward());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Quests.QuestRewardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestReward(QuestReward other) : this() {
      type_ = other.type_;
      amount_ = other.amount_;
      pokemonIndex_ = other.pokemonIndex_;
      itemId_ = other.itemId_;
      questTemplateId_ = other.questTemplateId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestReward Clone() {
      return new QuestReward(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::POGOProtos.Data.Quests.QuestReward.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Quests.QuestReward.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_index" field.</summary>
    public const int PokemonIndexFieldNumber = 3;
    private int pokemonIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PokemonIndex {
      get { return pokemonIndex_; }
      set {
        pokemonIndex_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 4;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "quest_template_id" field.</summary>
    public const int QuestTemplateIdFieldNumber = 5;
    private string questTemplateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuestTemplateId {
      get { return questTemplateId_; }
      set {
        questTemplateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Amount != other.Amount) return false;
      if (PokemonIndex != other.PokemonIndex) return false;
      if (ItemId != other.ItemId) return false;
      if (QuestTemplateId != other.QuestTemplateId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (PokemonIndex != 0) hash ^= PokemonIndex.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (QuestTemplateId.Length != 0) hash ^= QuestTemplateId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Amount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (PokemonIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PokemonIndex);
      }
      if (ItemId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemId);
      }
      if (QuestTemplateId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(QuestTemplateId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (PokemonIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PokemonIndex);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (QuestTemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestTemplateId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestReward other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.PokemonIndex != 0) {
        PokemonIndex = other.PokemonIndex;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.QuestTemplateId.Length != 0) {
        QuestTemplateId = other.QuestTemplateId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::POGOProtos.Data.Quests.QuestReward.Types.Type) input.ReadEnum();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
          case 24: {
            PokemonIndex = input.ReadInt32();
            break;
          }
          case 32: {
            ItemId = input.ReadInt32();
            break;
          }
          case 42: {
            QuestTemplateId = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QuestReward message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("EXPERIENCE")] Experience = 0,
        [pbr::OriginalName("ITEM")] Item = 1,
        [pbr::OriginalName("POKEMON_ENCOUNTER")] PokemonEncounter = 2,
        [pbr::OriginalName("STARDUST")] Stardust = 3,
        [pbr::OriginalName("CANDY")] Candy = 4,
        [pbr::OriginalName("AVATAR_CLOTHING")] AvatarClothing = 5,
        [pbr::OriginalName("QUEST")] Quest = 6,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
