// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/MarkReadNewsArticleMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Requests/Messages/MarkReadNewsArticleMessage.proto</summary>
  public static partial class MarkReadNewsArticleMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Requests/Messages/MarkReadNewsArticleMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarkReadNewsArticleMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkhQT0dPUHJvdG9zL05ldHdvcmtpbmcvUmVxdWVzdHMvTWVzc2FnZXMvTWFy",
            "a1JlYWROZXdzQXJ0aWNsZU1lc3NhZ2UucHJvdG8SJ1BPR09Qcm90b3MuTmV0",
            "d29ya2luZy5SZXF1ZXN0cy5NZXNzYWdlcyIuChpNYXJrUmVhZE5ld3NBcnRp",
            "Y2xlTWVzc2FnZRIQCghuZXdzX2lkcxgBIAMoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Requests.Messages.MarkReadNewsArticleMessage), global::POGOProtos.Networking.Requests.Messages.MarkReadNewsArticleMessage.Parser, new[]{ "NewsIds" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MarkReadNewsArticleMessage : pb::IMessage<MarkReadNewsArticleMessage> {
    private static readonly pb::MessageParser<MarkReadNewsArticleMessage> _parser = new pb::MessageParser<MarkReadNewsArticleMessage>(() => new MarkReadNewsArticleMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarkReadNewsArticleMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Requests.Messages.MarkReadNewsArticleMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkReadNewsArticleMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkReadNewsArticleMessage(MarkReadNewsArticleMessage other) : this() {
      newsIds_ = other.newsIds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkReadNewsArticleMessage Clone() {
      return new MarkReadNewsArticleMessage(this);
    }

    /// <summary>Field number for the "news_ids" field.</summary>
    public const int NewsIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_newsIds_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> newsIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NewsIds {
      get { return newsIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarkReadNewsArticleMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarkReadNewsArticleMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!newsIds_.Equals(other.newsIds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= newsIds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      newsIds_.WriteTo(output, _repeated_newsIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += newsIds_.CalculateSize(_repeated_newsIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarkReadNewsArticleMessage other) {
      if (other == null) {
        return;
      }
      newsIds_.Add(other.newsIds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            newsIds_.AddEntriesFrom(input, _repeated_newsIds_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
