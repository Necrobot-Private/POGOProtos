// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Networking/Requests/Messages/JoinLobbyMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Requests/Messages/JoinLobbyMessage.proto</summary>
  public static partial class JoinLobbyMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Requests/Messages/JoinLobbyMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JoinLobbyMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj5QT0dPUHJvdG9zL05ldHdvcmtpbmcvUmVxdWVzdHMvTWVzc2FnZXMvSm9p",
            "bkxvYmJ5TWVzc2FnZS5wcm90bxInUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJl",
            "cXVlc3RzLk1lc3NhZ2VzIsIBChBKb2luTG9iYnlNZXNzYWdlEhEKCXJhaWRf",
            "c2VlZBgBIAEoAxIOCgZneW1faWQYAiABKAkSEAoIbG9iYnlfaWQYAyADKAUS",
            "DwoHcHJpdmF0ZRgEIAEoCBIaChJwbGF5ZXJfbGF0X2RlZ3JlZXMYBSABKAES",
            "GgoScGxheWVyX2xuZ19kZWdyZWVzGAYgASgBEhcKD2d5bV9sYXRfZGVncmVl",
            "cxgHIAEoARIXCg9neW1fbG5nX2RlZ3JlZXMYCCABKAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Requests.Messages.JoinLobbyMessage), global::POGOProtos.Networking.Requests.Messages.JoinLobbyMessage.Parser, new[]{ "RaidSeed", "GymId", "LobbyId", "Private", "PlayerLatDegrees", "PlayerLngDegrees", "GymLatDegrees", "GymLngDegrees" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class JoinLobbyMessage : pb::IMessage<JoinLobbyMessage> {
    private static readonly pb::MessageParser<JoinLobbyMessage> _parser = new pb::MessageParser<JoinLobbyMessage>(() => new JoinLobbyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinLobbyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Requests.Messages.JoinLobbyMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyMessage(JoinLobbyMessage other) : this() {
      raidSeed_ = other.raidSeed_;
      gymId_ = other.gymId_;
      lobbyId_ = other.lobbyId_.Clone();
      private_ = other.private_;
      playerLatDegrees_ = other.playerLatDegrees_;
      playerLngDegrees_ = other.playerLngDegrees_;
      gymLatDegrees_ = other.gymLatDegrees_;
      gymLngDegrees_ = other.gymLngDegrees_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyMessage Clone() {
      return new JoinLobbyMessage(this);
    }

    /// <summary>Field number for the "raid_seed" field.</summary>
    public const int RaidSeedFieldNumber = 1;
    private long raidSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RaidSeed {
      get { return raidSeed_; }
      set {
        raidSeed_ = value;
      }
    }

    /// <summary>Field number for the "gym_id" field.</summary>
    public const int GymIdFieldNumber = 2;
    private string gymId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GymId {
      get { return gymId_; }
      set {
        gymId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_lobbyId_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> lobbyId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LobbyId {
      get { return lobbyId_; }
    }

    /// <summary>Field number for the "private" field.</summary>
    public const int PrivateFieldNumber = 4;
    private bool private_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Private {
      get { return private_; }
      set {
        private_ = value;
      }
    }

    /// <summary>Field number for the "player_lat_degrees" field.</summary>
    public const int PlayerLatDegreesFieldNumber = 5;
    private double playerLatDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PlayerLatDegrees {
      get { return playerLatDegrees_; }
      set {
        playerLatDegrees_ = value;
      }
    }

    /// <summary>Field number for the "player_lng_degrees" field.</summary>
    public const int PlayerLngDegreesFieldNumber = 6;
    private double playerLngDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PlayerLngDegrees {
      get { return playerLngDegrees_; }
      set {
        playerLngDegrees_ = value;
      }
    }

    /// <summary>Field number for the "gym_lat_degrees" field.</summary>
    public const int GymLatDegreesFieldNumber = 7;
    private double gymLatDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GymLatDegrees {
      get { return gymLatDegrees_; }
      set {
        gymLatDegrees_ = value;
      }
    }

    /// <summary>Field number for the "gym_lng_degrees" field.</summary>
    public const int GymLngDegreesFieldNumber = 8;
    private double gymLngDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GymLngDegrees {
      get { return gymLngDegrees_; }
      set {
        gymLngDegrees_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinLobbyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinLobbyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RaidSeed != other.RaidSeed) return false;
      if (GymId != other.GymId) return false;
      if(!lobbyId_.Equals(other.lobbyId_)) return false;
      if (Private != other.Private) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlayerLatDegrees, other.PlayerLatDegrees)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlayerLngDegrees, other.PlayerLngDegrees)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GymLatDegrees, other.GymLatDegrees)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GymLngDegrees, other.GymLngDegrees)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RaidSeed != 0L) hash ^= RaidSeed.GetHashCode();
      if (GymId.Length != 0) hash ^= GymId.GetHashCode();
      hash ^= lobbyId_.GetHashCode();
      if (Private != false) hash ^= Private.GetHashCode();
      if (PlayerLatDegrees != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlayerLatDegrees);
      if (PlayerLngDegrees != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlayerLngDegrees);
      if (GymLatDegrees != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GymLatDegrees);
      if (GymLngDegrees != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GymLngDegrees);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RaidSeed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RaidSeed);
      }
      if (GymId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GymId);
      }
      lobbyId_.WriteTo(output, _repeated_lobbyId_codec);
      if (Private != false) {
        output.WriteRawTag(32);
        output.WriteBool(Private);
      }
      if (PlayerLatDegrees != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(PlayerLatDegrees);
      }
      if (PlayerLngDegrees != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(PlayerLngDegrees);
      }
      if (GymLatDegrees != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(GymLatDegrees);
      }
      if (GymLngDegrees != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(GymLngDegrees);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RaidSeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RaidSeed);
      }
      if (GymId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GymId);
      }
      size += lobbyId_.CalculateSize(_repeated_lobbyId_codec);
      if (Private != false) {
        size += 1 + 1;
      }
      if (PlayerLatDegrees != 0D) {
        size += 1 + 8;
      }
      if (PlayerLngDegrees != 0D) {
        size += 1 + 8;
      }
      if (GymLatDegrees != 0D) {
        size += 1 + 8;
      }
      if (GymLngDegrees != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinLobbyMessage other) {
      if (other == null) {
        return;
      }
      if (other.RaidSeed != 0L) {
        RaidSeed = other.RaidSeed;
      }
      if (other.GymId.Length != 0) {
        GymId = other.GymId;
      }
      lobbyId_.Add(other.lobbyId_);
      if (other.Private != false) {
        Private = other.Private;
      }
      if (other.PlayerLatDegrees != 0D) {
        PlayerLatDegrees = other.PlayerLatDegrees;
      }
      if (other.PlayerLngDegrees != 0D) {
        PlayerLngDegrees = other.PlayerLngDegrees;
      }
      if (other.GymLatDegrees != 0D) {
        GymLatDegrees = other.GymLatDegrees;
      }
      if (other.GymLngDegrees != 0D) {
        GymLngDegrees = other.GymLngDegrees;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RaidSeed = input.ReadInt64();
            break;
          }
          case 18: {
            GymId = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            lobbyId_.AddEntriesFrom(input, _repeated_lobbyId_codec);
            break;
          }
          case 32: {
            Private = input.ReadBool();
            break;
          }
          case 41: {
            PlayerLatDegrees = input.ReadDouble();
            break;
          }
          case 49: {
            PlayerLngDegrees = input.ReadDouble();
            break;
          }
          case 57: {
            GymLatDegrees = input.ReadDouble();
            break;
          }
          case 65: {
            GymLngDegrees = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
