// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Networking/Platform/Telemetry/Distribution.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Platform.Telemetry {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Platform/Telemetry/Distribution.proto</summary>
  public static partial class DistributionReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Platform/Telemetry/Distribution.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DistributionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjtQT0dPUHJvdG9zL05ldHdvcmtpbmcvUGxhdGZvcm0vVGVsZW1ldHJ5L0Rp",
            "c3RyaWJ1dGlvbi5wcm90bxIoUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlBsYXRm",
            "b3JtLlRlbGVtZXRyeSLVCAoMRGlzdHJpYnV0aW9uEg0KBWNvdW50GAEgASgD",
            "EgwKBG1lYW4YAiABKAISIAoYc3VtX29mX3NxdWFyZWRfZGV2aWF0aW9uGAMg",
            "ASgBEksKBXJhbmdlGAQgASgLMjwuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlBs",
            "YXRmb3JtLlRlbGVtZXRyeS5EaXN0cmlidXRpb24uUmFuZ2USXAoOYnVja2V0",
            "X29wdGlvbnMYBSABKAsyRC5QT0dPUHJvdG9zLk5ldHdvcmtpbmcuUGxhdGZv",
            "cm0uVGVsZW1ldHJ5LkRpc3RyaWJ1dGlvbi5CdWNrZXRPcHRpb25zEhUKDWJ1",
            "Y2tldF9jb3VudHMYBiADKAMa/gMKDUJ1Y2tldE9wdGlvbnMSXAoObGluZWFy",
            "X2J1Y2tldHMYASABKAsyRC5QT0dPUHJvdG9zLk5ldHdvcmtpbmcuUGxhdGZv",
            "cm0uVGVsZW1ldHJ5LkRpc3RyaWJ1dGlvbi5MaW5lYXJCdWNrZXRzEmYKE2V4",
            "cG9uZW50aWFsX2J1Y2tldHMYAiABKAsySS5QT0dPUHJvdG9zLk5ldHdvcmtp",
            "bmcuUGxhdGZvcm0uVGVsZW1ldHJ5LkRpc3RyaWJ1dGlvbi5FeHBvbmVudGlh",
            "bEJ1Y2tldHMSYAoQZXhwbGljaXRfYnVja2V0cxgDIAEoCzJGLlBPR09Qcm90",
            "b3MuTmV0d29ya2luZy5QbGF0Zm9ybS5UZWxlbWV0cnkuRGlzdHJpYnV0aW9u",
            "LkV4cGxpY2l0QnVja2V0cxohCg9FeHBsaWNpdEJ1Y2tldHMSDgoGYm91bmRz",
            "GAEgAygDGlYKEkV4cG9uZW50aWFsQnVja2V0cxIaChJudW1fZmluaXRlX2J1",
            "Y2tldHMYASABKAMSFQoNZ3Jvd3RoX2ZhY3RvchgCIAEoAhINCgVzY2FsZRgD",
            "IAEoAhpKCg1MaW5lYXJCdWNrZXRzEhoKEm51bV9maW5pdGVfYnVja2V0cxgB",
            "IAEoAxINCgV3aWR0aBgCIAEoAxIOCgZvZmZzZXQYAyABKAMaIQoPRXhwbGlj",
            "aXRCdWNrZXRzEg4KBmJvdW5kcxgBIAMoAxpWChJFeHBvbmVudGlhbEJ1Y2tl",
            "dHMSGgoSbnVtX2Zpbml0ZV9idWNrZXRzGAEgASgDEhUKDWdyb3d0aF9mYWN0",
            "b3IYAiABKAISDQoFc2NhbGUYAyABKAIaSgoNTGluZWFyQnVja2V0cxIaChJu",
            "dW1fZmluaXRlX2J1Y2tldHMYASABKAMSDQoFd2lkdGgYAiABKAMSDgoGb2Zm",
            "c2V0GAMgASgDGiEKBVJhbmdlEgsKA21pbhgBIAEoAxILCgNtYXgYAiABKAMi",
            "WQoKQnVja2V0VHlwZRIICgRub25lEAASEgoObGluZWFyX2J1Y2tldHMQARIX",
            "ChNleHBvbmVudGlhbF9idWNrZXRzEAISFAoQZXhwbGljaXRfYnVja2V0cxAD",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution), global::POGOProtos.Networking.Platform.Telemetry.Distribution.Parser, new[]{ "Count", "Mean", "SumOfSquaredDeviation", "Range", "BucketOptions", "BucketCounts" }, null, new[]{ typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketType) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions), global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Parser, new[]{ "LinearBuckets", "ExponentialBuckets", "ExplicitBuckets" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Types.ExplicitBuckets), global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Types.ExplicitBuckets.Parser, new[]{ "Bounds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Types.ExponentialBuckets), global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Types.ExponentialBuckets.Parser, new[]{ "NumFiniteBuckets", "GrowthFactor", "Scale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Types.LinearBuckets), global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Types.LinearBuckets.Parser, new[]{ "NumFiniteBuckets", "Width", "Offset" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExplicitBuckets), global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExplicitBuckets.Parser, new[]{ "Bounds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExponentialBuckets), global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExponentialBuckets.Parser, new[]{ "NumFiniteBuckets", "GrowthFactor", "Scale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.LinearBuckets), global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.LinearBuckets.Parser, new[]{ "NumFiniteBuckets", "Width", "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.Range), global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.Range.Parser, new[]{ "Min", "Max" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Distribution : pb::IMessage<Distribution> {
    private static readonly pb::MessageParser<Distribution> _parser = new pb::MessageParser<Distribution>(() => new Distribution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Distribution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Platform.Telemetry.DistributionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Distribution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Distribution(Distribution other) : this() {
      count_ = other.count_;
      mean_ = other.mean_;
      sumOfSquaredDeviation_ = other.sumOfSquaredDeviation_;
      range_ = other.range_ != null ? other.range_.Clone() : null;
      bucketOptions_ = other.bucketOptions_ != null ? other.bucketOptions_.Clone() : null;
      bucketCounts_ = other.bucketCounts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Distribution Clone() {
      return new Distribution(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "mean" field.</summary>
    public const int MeanFieldNumber = 2;
    private float mean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Mean {
      get { return mean_; }
      set {
        mean_ = value;
      }
    }

    /// <summary>Field number for the "sum_of_squared_deviation" field.</summary>
    public const int SumOfSquaredDeviationFieldNumber = 3;
    private double sumOfSquaredDeviation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double SumOfSquaredDeviation {
      get { return sumOfSquaredDeviation_; }
      set {
        sumOfSquaredDeviation_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 4;
    private global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.Range range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.Range Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "bucket_options" field.</summary>
    public const int BucketOptionsFieldNumber = 5;
    private global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions bucketOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions BucketOptions {
      get { return bucketOptions_; }
      set {
        bucketOptions_ = value;
      }
    }

    /// <summary>Field number for the "bucket_counts" field.</summary>
    public const int BucketCountsFieldNumber = 6;
    private static readonly pb::FieldCodec<long> _repeated_bucketCounts_codec
        = pb::FieldCodec.ForInt64(50);
    private readonly pbc::RepeatedField<long> bucketCounts_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> BucketCounts {
      get { return bucketCounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Distribution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Distribution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Mean, other.Mean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SumOfSquaredDeviation, other.SumOfSquaredDeviation)) return false;
      if (!object.Equals(Range, other.Range)) return false;
      if (!object.Equals(BucketOptions, other.BucketOptions)) return false;
      if(!bucketCounts_.Equals(other.bucketCounts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (Mean != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Mean);
      if (SumOfSquaredDeviation != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SumOfSquaredDeviation);
      if (range_ != null) hash ^= Range.GetHashCode();
      if (bucketOptions_ != null) hash ^= BucketOptions.GetHashCode();
      hash ^= bucketCounts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Count);
      }
      if (Mean != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Mean);
      }
      if (SumOfSquaredDeviation != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(SumOfSquaredDeviation);
      }
      if (range_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Range);
      }
      if (bucketOptions_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BucketOptions);
      }
      bucketCounts_.WriteTo(output, _repeated_bucketCounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (Mean != 0F) {
        size += 1 + 4;
      }
      if (SumOfSquaredDeviation != 0D) {
        size += 1 + 8;
      }
      if (range_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
      }
      if (bucketOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BucketOptions);
      }
      size += bucketCounts_.CalculateSize(_repeated_bucketCounts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Distribution other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      if (other.Mean != 0F) {
        Mean = other.Mean;
      }
      if (other.SumOfSquaredDeviation != 0D) {
        SumOfSquaredDeviation = other.SumOfSquaredDeviation;
      }
      if (other.range_ != null) {
        if (range_ == null) {
          range_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.Range();
        }
        Range.MergeFrom(other.Range);
      }
      if (other.bucketOptions_ != null) {
        if (bucketOptions_ == null) {
          bucketOptions_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions();
        }
        BucketOptions.MergeFrom(other.BucketOptions);
      }
      bucketCounts_.Add(other.bucketCounts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt64();
            break;
          }
          case 21: {
            Mean = input.ReadFloat();
            break;
          }
          case 25: {
            SumOfSquaredDeviation = input.ReadDouble();
            break;
          }
          case 34: {
            if (range_ == null) {
              range_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.Range();
            }
            input.ReadMessage(range_);
            break;
          }
          case 42: {
            if (bucketOptions_ == null) {
              bucketOptions_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions();
            }
            input.ReadMessage(bucketOptions_);
            break;
          }
          case 50:
          case 48: {
            bucketCounts_.AddEntriesFrom(input, _repeated_bucketCounts_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Distribution message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum BucketType {
        [pbr::OriginalName("none")] None = 0,
        [pbr::OriginalName("linear_buckets")] LinearBuckets = 1,
        [pbr::OriginalName("exponential_buckets")] ExponentialBuckets = 2,
        [pbr::OriginalName("explicit_buckets")] ExplicitBuckets = 3,
      }

      public sealed partial class BucketOptions : pb::IMessage<BucketOptions> {
        private static readonly pb::MessageParser<BucketOptions> _parser = new pb::MessageParser<BucketOptions>(() => new BucketOptions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BucketOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Networking.Platform.Telemetry.Distribution.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BucketOptions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BucketOptions(BucketOptions other) : this() {
          linearBuckets_ = other.linearBuckets_ != null ? other.linearBuckets_.Clone() : null;
          exponentialBuckets_ = other.exponentialBuckets_ != null ? other.exponentialBuckets_.Clone() : null;
          explicitBuckets_ = other.explicitBuckets_ != null ? other.explicitBuckets_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BucketOptions Clone() {
          return new BucketOptions(this);
        }

        /// <summary>Field number for the "linear_buckets" field.</summary>
        public const int LinearBucketsFieldNumber = 1;
        private global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.LinearBuckets linearBuckets_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.LinearBuckets LinearBuckets {
          get { return linearBuckets_; }
          set {
            linearBuckets_ = value;
          }
        }

        /// <summary>Field number for the "exponential_buckets" field.</summary>
        public const int ExponentialBucketsFieldNumber = 2;
        private global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExponentialBuckets exponentialBuckets_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExponentialBuckets ExponentialBuckets {
          get { return exponentialBuckets_; }
          set {
            exponentialBuckets_ = value;
          }
        }

        /// <summary>Field number for the "explicit_buckets" field.</summary>
        public const int ExplicitBucketsFieldNumber = 3;
        private global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExplicitBuckets explicitBuckets_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExplicitBuckets ExplicitBuckets {
          get { return explicitBuckets_; }
          set {
            explicitBuckets_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BucketOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BucketOptions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(LinearBuckets, other.LinearBuckets)) return false;
          if (!object.Equals(ExponentialBuckets, other.ExponentialBuckets)) return false;
          if (!object.Equals(ExplicitBuckets, other.ExplicitBuckets)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (linearBuckets_ != null) hash ^= LinearBuckets.GetHashCode();
          if (exponentialBuckets_ != null) hash ^= ExponentialBuckets.GetHashCode();
          if (explicitBuckets_ != null) hash ^= ExplicitBuckets.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (linearBuckets_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(LinearBuckets);
          }
          if (exponentialBuckets_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ExponentialBuckets);
          }
          if (explicitBuckets_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ExplicitBuckets);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (linearBuckets_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinearBuckets);
          }
          if (exponentialBuckets_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExponentialBuckets);
          }
          if (explicitBuckets_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExplicitBuckets);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BucketOptions other) {
          if (other == null) {
            return;
          }
          if (other.linearBuckets_ != null) {
            if (linearBuckets_ == null) {
              linearBuckets_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.LinearBuckets();
            }
            LinearBuckets.MergeFrom(other.LinearBuckets);
          }
          if (other.exponentialBuckets_ != null) {
            if (exponentialBuckets_ == null) {
              exponentialBuckets_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExponentialBuckets();
            }
            ExponentialBuckets.MergeFrom(other.ExponentialBuckets);
          }
          if (other.explicitBuckets_ != null) {
            if (explicitBuckets_ == null) {
              explicitBuckets_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExplicitBuckets();
            }
            ExplicitBuckets.MergeFrom(other.ExplicitBuckets);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (linearBuckets_ == null) {
                  linearBuckets_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.LinearBuckets();
                }
                input.ReadMessage(linearBuckets_);
                break;
              }
              case 18: {
                if (exponentialBuckets_ == null) {
                  exponentialBuckets_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExponentialBuckets();
                }
                input.ReadMessage(exponentialBuckets_);
                break;
              }
              case 26: {
                if (explicitBuckets_ == null) {
                  explicitBuckets_ = new global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.ExplicitBuckets();
                }
                input.ReadMessage(explicitBuckets_);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the BucketOptions message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ExplicitBuckets : pb::IMessage<ExplicitBuckets> {
            private static readonly pb::MessageParser<ExplicitBuckets> _parser = new pb::MessageParser<ExplicitBuckets>(() => new ExplicitBuckets());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ExplicitBuckets> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ExplicitBuckets() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ExplicitBuckets(ExplicitBuckets other) : this() {
              bounds_ = other.bounds_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ExplicitBuckets Clone() {
              return new ExplicitBuckets(this);
            }

            /// <summary>Field number for the "bounds" field.</summary>
            public const int BoundsFieldNumber = 1;
            private static readonly pb::FieldCodec<long> _repeated_bounds_codec
                = pb::FieldCodec.ForInt64(10);
            private readonly pbc::RepeatedField<long> bounds_ = new pbc::RepeatedField<long>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> Bounds {
              get { return bounds_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ExplicitBuckets);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ExplicitBuckets other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!bounds_.Equals(other.bounds_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= bounds_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              bounds_.WriteTo(output, _repeated_bounds_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += bounds_.CalculateSize(_repeated_bounds_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ExplicitBuckets other) {
              if (other == null) {
                return;
              }
              bounds_.Add(other.bounds_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10:
                  case 8: {
                    bounds_.AddEntriesFrom(input, _repeated_bounds_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ExponentialBuckets : pb::IMessage<ExponentialBuckets> {
            private static readonly pb::MessageParser<ExponentialBuckets> _parser = new pb::MessageParser<ExponentialBuckets>(() => new ExponentialBuckets());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ExponentialBuckets> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ExponentialBuckets() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ExponentialBuckets(ExponentialBuckets other) : this() {
              numFiniteBuckets_ = other.numFiniteBuckets_;
              growthFactor_ = other.growthFactor_;
              scale_ = other.scale_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ExponentialBuckets Clone() {
              return new ExponentialBuckets(this);
            }

            /// <summary>Field number for the "num_finite_buckets" field.</summary>
            public const int NumFiniteBucketsFieldNumber = 1;
            private long numFiniteBuckets_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long NumFiniteBuckets {
              get { return numFiniteBuckets_; }
              set {
                numFiniteBuckets_ = value;
              }
            }

            /// <summary>Field number for the "growth_factor" field.</summary>
            public const int GrowthFactorFieldNumber = 2;
            private float growthFactor_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float GrowthFactor {
              get { return growthFactor_; }
              set {
                growthFactor_ = value;
              }
            }

            /// <summary>Field number for the "scale" field.</summary>
            public const int ScaleFieldNumber = 3;
            private float scale_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float Scale {
              get { return scale_; }
              set {
                scale_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ExponentialBuckets);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ExponentialBuckets other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (NumFiniteBuckets != other.NumFiniteBuckets) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GrowthFactor, other.GrowthFactor)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (NumFiniteBuckets != 0L) hash ^= NumFiniteBuckets.GetHashCode();
              if (GrowthFactor != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GrowthFactor);
              if (Scale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (NumFiniteBuckets != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(NumFiniteBuckets);
              }
              if (GrowthFactor != 0F) {
                output.WriteRawTag(21);
                output.WriteFloat(GrowthFactor);
              }
              if (Scale != 0F) {
                output.WriteRawTag(29);
                output.WriteFloat(Scale);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (NumFiniteBuckets != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumFiniteBuckets);
              }
              if (GrowthFactor != 0F) {
                size += 1 + 4;
              }
              if (Scale != 0F) {
                size += 1 + 4;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ExponentialBuckets other) {
              if (other == null) {
                return;
              }
              if (other.NumFiniteBuckets != 0L) {
                NumFiniteBuckets = other.NumFiniteBuckets;
              }
              if (other.GrowthFactor != 0F) {
                GrowthFactor = other.GrowthFactor;
              }
              if (other.Scale != 0F) {
                Scale = other.Scale;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    NumFiniteBuckets = input.ReadInt64();
                    break;
                  }
                  case 21: {
                    GrowthFactor = input.ReadFloat();
                    break;
                  }
                  case 29: {
                    Scale = input.ReadFloat();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class LinearBuckets : pb::IMessage<LinearBuckets> {
            private static readonly pb::MessageParser<LinearBuckets> _parser = new pb::MessageParser<LinearBuckets>(() => new LinearBuckets());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<LinearBuckets> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::POGOProtos.Networking.Platform.Telemetry.Distribution.Types.BucketOptions.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LinearBuckets() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LinearBuckets(LinearBuckets other) : this() {
              numFiniteBuckets_ = other.numFiniteBuckets_;
              width_ = other.width_;
              offset_ = other.offset_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LinearBuckets Clone() {
              return new LinearBuckets(this);
            }

            /// <summary>Field number for the "num_finite_buckets" field.</summary>
            public const int NumFiniteBucketsFieldNumber = 1;
            private long numFiniteBuckets_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long NumFiniteBuckets {
              get { return numFiniteBuckets_; }
              set {
                numFiniteBuckets_ = value;
              }
            }

            /// <summary>Field number for the "width" field.</summary>
            public const int WidthFieldNumber = 2;
            private long width_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long Width {
              get { return width_; }
              set {
                width_ = value;
              }
            }

            /// <summary>Field number for the "offset" field.</summary>
            public const int OffsetFieldNumber = 3;
            private long offset_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long Offset {
              get { return offset_; }
              set {
                offset_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as LinearBuckets);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(LinearBuckets other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (NumFiniteBuckets != other.NumFiniteBuckets) return false;
              if (Width != other.Width) return false;
              if (Offset != other.Offset) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (NumFiniteBuckets != 0L) hash ^= NumFiniteBuckets.GetHashCode();
              if (Width != 0L) hash ^= Width.GetHashCode();
              if (Offset != 0L) hash ^= Offset.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (NumFiniteBuckets != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(NumFiniteBuckets);
              }
              if (Width != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(Width);
              }
              if (Offset != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Offset);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (NumFiniteBuckets != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumFiniteBuckets);
              }
              if (Width != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Width);
              }
              if (Offset != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(LinearBuckets other) {
              if (other == null) {
                return;
              }
              if (other.NumFiniteBuckets != 0L) {
                NumFiniteBuckets = other.NumFiniteBuckets;
              }
              if (other.Width != 0L) {
                Width = other.Width;
              }
              if (other.Offset != 0L) {
                Offset = other.Offset;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    NumFiniteBuckets = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    Width = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    Offset = input.ReadInt64();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class ExplicitBuckets : pb::IMessage<ExplicitBuckets> {
        private static readonly pb::MessageParser<ExplicitBuckets> _parser = new pb::MessageParser<ExplicitBuckets>(() => new ExplicitBuckets());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExplicitBuckets> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Networking.Platform.Telemetry.Distribution.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExplicitBuckets() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExplicitBuckets(ExplicitBuckets other) : this() {
          bounds_ = other.bounds_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExplicitBuckets Clone() {
          return new ExplicitBuckets(this);
        }

        /// <summary>Field number for the "bounds" field.</summary>
        public const int BoundsFieldNumber = 1;
        private static readonly pb::FieldCodec<long> _repeated_bounds_codec
            = pb::FieldCodec.ForInt64(10);
        private readonly pbc::RepeatedField<long> bounds_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> Bounds {
          get { return bounds_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExplicitBuckets);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExplicitBuckets other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!bounds_.Equals(other.bounds_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= bounds_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          bounds_.WriteTo(output, _repeated_bounds_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += bounds_.CalculateSize(_repeated_bounds_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExplicitBuckets other) {
          if (other == null) {
            return;
          }
          bounds_.Add(other.bounds_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                bounds_.AddEntriesFrom(input, _repeated_bounds_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ExponentialBuckets : pb::IMessage<ExponentialBuckets> {
        private static readonly pb::MessageParser<ExponentialBuckets> _parser = new pb::MessageParser<ExponentialBuckets>(() => new ExponentialBuckets());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExponentialBuckets> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Networking.Platform.Telemetry.Distribution.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExponentialBuckets() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExponentialBuckets(ExponentialBuckets other) : this() {
          numFiniteBuckets_ = other.numFiniteBuckets_;
          growthFactor_ = other.growthFactor_;
          scale_ = other.scale_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExponentialBuckets Clone() {
          return new ExponentialBuckets(this);
        }

        /// <summary>Field number for the "num_finite_buckets" field.</summary>
        public const int NumFiniteBucketsFieldNumber = 1;
        private long numFiniteBuckets_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long NumFiniteBuckets {
          get { return numFiniteBuckets_; }
          set {
            numFiniteBuckets_ = value;
          }
        }

        /// <summary>Field number for the "growth_factor" field.</summary>
        public const int GrowthFactorFieldNumber = 2;
        private float growthFactor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float GrowthFactor {
          get { return growthFactor_; }
          set {
            growthFactor_ = value;
          }
        }

        /// <summary>Field number for the "scale" field.</summary>
        public const int ScaleFieldNumber = 3;
        private float scale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Scale {
          get { return scale_; }
          set {
            scale_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExponentialBuckets);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExponentialBuckets other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NumFiniteBuckets != other.NumFiniteBuckets) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GrowthFactor, other.GrowthFactor)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NumFiniteBuckets != 0L) hash ^= NumFiniteBuckets.GetHashCode();
          if (GrowthFactor != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GrowthFactor);
          if (Scale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (NumFiniteBuckets != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(NumFiniteBuckets);
          }
          if (GrowthFactor != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(GrowthFactor);
          }
          if (Scale != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Scale);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NumFiniteBuckets != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumFiniteBuckets);
          }
          if (GrowthFactor != 0F) {
            size += 1 + 4;
          }
          if (Scale != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExponentialBuckets other) {
          if (other == null) {
            return;
          }
          if (other.NumFiniteBuckets != 0L) {
            NumFiniteBuckets = other.NumFiniteBuckets;
          }
          if (other.GrowthFactor != 0F) {
            GrowthFactor = other.GrowthFactor;
          }
          if (other.Scale != 0F) {
            Scale = other.Scale;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                NumFiniteBuckets = input.ReadInt64();
                break;
              }
              case 21: {
                GrowthFactor = input.ReadFloat();
                break;
              }
              case 29: {
                Scale = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      public sealed partial class LinearBuckets : pb::IMessage<LinearBuckets> {
        private static readonly pb::MessageParser<LinearBuckets> _parser = new pb::MessageParser<LinearBuckets>(() => new LinearBuckets());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LinearBuckets> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Networking.Platform.Telemetry.Distribution.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LinearBuckets() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LinearBuckets(LinearBuckets other) : this() {
          numFiniteBuckets_ = other.numFiniteBuckets_;
          width_ = other.width_;
          offset_ = other.offset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LinearBuckets Clone() {
          return new LinearBuckets(this);
        }

        /// <summary>Field number for the "num_finite_buckets" field.</summary>
        public const int NumFiniteBucketsFieldNumber = 1;
        private long numFiniteBuckets_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long NumFiniteBuckets {
          get { return numFiniteBuckets_; }
          set {
            numFiniteBuckets_ = value;
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 2;
        private long width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "offset" field.</summary>
        public const int OffsetFieldNumber = 3;
        private long offset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Offset {
          get { return offset_; }
          set {
            offset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LinearBuckets);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LinearBuckets other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NumFiniteBuckets != other.NumFiniteBuckets) return false;
          if (Width != other.Width) return false;
          if (Offset != other.Offset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NumFiniteBuckets != 0L) hash ^= NumFiniteBuckets.GetHashCode();
          if (Width != 0L) hash ^= Width.GetHashCode();
          if (Offset != 0L) hash ^= Offset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (NumFiniteBuckets != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(NumFiniteBuckets);
          }
          if (Width != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Width);
          }
          if (Offset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(Offset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NumFiniteBuckets != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumFiniteBuckets);
          }
          if (Width != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Width);
          }
          if (Offset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LinearBuckets other) {
          if (other == null) {
            return;
          }
          if (other.NumFiniteBuckets != 0L) {
            NumFiniteBuckets = other.NumFiniteBuckets;
          }
          if (other.Width != 0L) {
            Width = other.Width;
          }
          if (other.Offset != 0L) {
            Offset = other.Offset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                NumFiniteBuckets = input.ReadInt64();
                break;
              }
              case 16: {
                Width = input.ReadInt64();
                break;
              }
              case 24: {
                Offset = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Range : pb::IMessage<Range> {
        private static readonly pb::MessageParser<Range> _parser = new pb::MessageParser<Range>(() => new Range());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Range> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Networking.Platform.Telemetry.Distribution.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Range() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Range(Range other) : this() {
          min_ = other.min_;
          max_ = other.max_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Range Clone() {
          return new Range(this);
        }

        /// <summary>Field number for the "min" field.</summary>
        public const int MinFieldNumber = 1;
        private long min_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Min {
          get { return min_; }
          set {
            min_ = value;
          }
        }

        /// <summary>Field number for the "max" field.</summary>
        public const int MaxFieldNumber = 2;
        private long max_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Max {
          get { return max_; }
          set {
            max_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Range);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Range other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Min != other.Min) return false;
          if (Max != other.Max) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Min != 0L) hash ^= Min.GetHashCode();
          if (Max != 0L) hash ^= Max.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Min != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Min);
          }
          if (Max != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Max);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Min != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Min);
          }
          if (Max != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Max);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Range other) {
          if (other == null) {
            return;
          }
          if (other.Min != 0L) {
            Min = other.Min;
          }
          if (other.Max != 0L) {
            Max = other.Max;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Min = input.ReadInt64();
                break;
              }
              case 16: {
                Max = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
