// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: POGOProtos/Networking/Platform/Telemetry/PlatformServerData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Platform.Telemetry {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Platform/Telemetry/PlatformServerData.proto</summary>
  public static partial class PlatformServerDataReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Platform/Telemetry/PlatformServerData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlatformServerDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkFQT0dPUHJvdG9zL05ldHdvcmtpbmcvUGxhdGZvcm0vVGVsZW1ldHJ5L1Bs",
            "YXRmb3JtU2VydmVyRGF0YS5wcm90bxIoUE9HT1Byb3Rvcy5OZXR3b3JraW5n",
            "LlBsYXRmb3JtLlRlbGVtZXRyeSJnChJQbGF0Zm9ybVNlcnZlckRhdGESDwoH",
            "dXNlcl9pZBgBIAEoCRIUCgx0ZWxlbWV0cnlfaWQYAiABKAkSEgoKc2Vzc2lv",
            "bl9pZBgDIAEoCRIWCg5leHBlcmltZW50X2lkcxgEIAMoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Platform.Telemetry.PlatformServerData), global::POGOProtos.Networking.Platform.Telemetry.PlatformServerData.Parser, new[]{ "UserId", "TelemetryId", "SessionId", "ExperimentIds" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlatformServerData : pb::IMessage<PlatformServerData> {
    private static readonly pb::MessageParser<PlatformServerData> _parser = new pb::MessageParser<PlatformServerData>(() => new PlatformServerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlatformServerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Platform.Telemetry.PlatformServerDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformServerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformServerData(PlatformServerData other) : this() {
      userId_ = other.userId_;
      telemetryId_ = other.telemetryId_;
      sessionId_ = other.sessionId_;
      experimentIds_ = other.experimentIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformServerData Clone() {
      return new PlatformServerData(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "telemetry_id" field.</summary>
    public const int TelemetryIdFieldNumber = 2;
    private string telemetryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TelemetryId {
      get { return telemetryId_; }
      set {
        telemetryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 3;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "experiment_ids" field.</summary>
    public const int ExperimentIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_experimentIds_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> experimentIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ExperimentIds {
      get { return experimentIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlatformServerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlatformServerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (TelemetryId != other.TelemetryId) return false;
      if (SessionId != other.SessionId) return false;
      if(!experimentIds_.Equals(other.experimentIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (TelemetryId.Length != 0) hash ^= TelemetryId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      hash ^= experimentIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (TelemetryId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TelemetryId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionId);
      }
      experimentIds_.WriteTo(output, _repeated_experimentIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (TelemetryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TelemetryId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      size += experimentIds_.CalculateSize(_repeated_experimentIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlatformServerData other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.TelemetryId.Length != 0) {
        TelemetryId = other.TelemetryId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      experimentIds_.Add(other.experimentIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            TelemetryId = input.ReadString();
            break;
          }
          case 26: {
            SessionId = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            experimentIds_.AddEntriesFrom(input, _repeated_experimentIds_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
